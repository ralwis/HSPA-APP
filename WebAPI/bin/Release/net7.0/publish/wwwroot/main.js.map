{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AAKM,MAAOA,UAAU;EAErBC,SAAS,CAACC,KAAY,EAAEC,eAAuB,EAAE,EAAEC,WAAmB,EAAE;IACtE,MAAMC,WAAW,GAAG,EAAE;IACtB,IAAGH,KAAK,CAACI,MAAM,KAAK,CAAC,IAAIH,YAAY,KAAK,EAAE,IAAIC,QAAQ,KAAK,EAAE,EAAC;MAC9D,OAAOF,KAAK;;IAGd,KAAI,MAAMK,IAAI,IAAIL,KAAK,EAAC;MACtB,IAAGK,IAAI,CAACH,QAAQ,CAAC,KAAKD,YAAY,EAAC;QACjCE,WAAW,CAACG,IAAI,CAACD,IAAI,CAAC;;;IAG1B,OAAOF,WAAW;EACpB;;AAdWL,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;;QAAVA,UAAU;EAAAS;AAAA;;;;;;;;;;;;;;;;ACAjB,MAAOC,QAAQ;EAEnBT,SAAS,CAACC,KAAoB,EAAES,IAAW;IACzC,MAAMC,SAAS,GAAGD,IAAI,CAAC,CAAC,CAAC;IACzB,MAAME,aAAa,GAAGF,IAAI,CAAC,CAAC,CAAC;IAC7B,IAAIG,UAAU,GAAG,CAAC;IAClB,IAAID,aAAa,KAAK,MAAM,EAAC;MAC3BC,UAAU,GAAG,CAAC,CAAC;;IAEjBZ,KAAK,CAACa,IAAI,CAAC,CAACC,CAAM,EAAEC,CAAM,KAAI;MAC5B,IAAGD,CAAC,CAACJ,SAAS,CAAC,GAAGK,CAAC,CAACL,SAAS,CAAC,EAAC;QAC7B,OAAO,CAAC,CAAC,GAAGE,UAAU;OACvB,MAAK,IAAIE,CAAC,CAACJ,SAAS,CAAC,GAAGK,CAAC,CAACL,SAAS,CAAC,EAAC;QACpC,OAAO,CAAC,GAAGE,UAAU;OACtB,MAAI;QACH,OAAO,CAAC;;IAEZ,CAAC,CAAC;IAEF,OAAOZ,KAAK;EACd;;AApBWQ,QAAQ;mBAARA,QAAQ;AAAA;AAARA,QAAQ;;QAARA,QAAQ;EAAAD;AAAA;;;;;;;;;;;;;;;;;;;;ACEf,MAAOS,YAAY;EALzBC;IAME,UAAK,GAAG,cAAc;;;AADXD,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAE;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPzBC,uDAAAA,kBAA2B;MAC3BA,4DAAAA,aAAiD;MAE/CA,uDAAAA,oBAA+B;MACjCA,0DAAAA,EAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHoD;AACH;AACA;AACwB;AACrB;AACV;AACM;AACQ;AAEf;AAC0C;AACA;AAC3B;AACF;AAC0B;AACS;AAC7B;AACU;AACS;AAChB;AACP;AACR;AACsD;AACrD;AACN;AACJ;;;;AAE7C,MAAMwB,SAAS,GAAW,CACxB;EAACC,IAAI,EAAC,EAAE;EAAEC,SAAS,EAAEhB,kGAAqBA;AAAA,CAAC,EAC3C;EAACe,IAAI,EAAC,eAAe;EAAEC,SAAS,EAAEhB,kGAAqBA;AAAA,CAAC,EACxD;EAACe,IAAI,EAAC,cAAc;EAAEC,SAAS,EAAEb,+FAAoBA;AAAA,CAAC,EACtD;EAACY,IAAI,EAAC,qBAAqB;EACzBC,SAAS,EAAEZ,wGAAuB;EAClCa,OAAO,EAAE;IAACC,GAAG,EAAEN,sHAA6BA;EAAA;AAAC,CAAC,EAChD;EAACG,IAAI,EAAC,YAAY;EAAEC,SAAS,EAAET,qFAAkBA;AAAA,CAAC,EAClD;EAACQ,IAAI,EAAC,eAAe;EAAEC,SAAS,EAAER,8FAAqBA;AAAA,CAAC,EACxD;EAACO,IAAI,EAAC,IAAI;EAAEC,SAAS,EAAEhB,kGAAqBA;AAAA,CAAC,CAC9C;AAqCK,MAAOmB,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,YAFRrC,wDAAY;AAAA;AAEboC,SAAS;aATT,CACTjB,qEAAc,EACdO,8EAAkB,EAClBC,wEAAe,EACfC,gEAAW,EACXC,sHAA6B,CAC9B;EAAAS,UAlBC9B,qEAAa,EACbC,mEAAgB,EAChBc,gEAAmB,EACnBD,wDAAW,EACXX,0FAAuB,EACvBC,6EAAwB,EAAE,EAC1BF,kEAAoB,CAACqB,SAAS,CAAC,EAC/BlB,2DAAU,EACVC,iEAAa,EACbC,yEAAkB,EAClBe,kEAAgB;AAAA;;uHAWPM,SAAS;IAAAI,eAjClBxC,wDAAY,EACZgB,kGAAqB,EACrBC,kGAAqB,EACrBC,uEAAe,EACfE,+FAAoB,EACpBC,wGAAuB,EACvBG,qFAAkB,EAClBC,8FAAqB,EACrB3C,2DAAU,EACVU,uDAAQ;IAAA8C,UAGR9B,qEAAa,EACbC,mEAAgB,EAChBc,gEAAmB,EACnBD,wDAAW,EACXX,0FAAuB,qIAGvBE,2DAAU,EACVC,iEAAa,EACbC,yEAAkB,EAClBe,kEAAgB;EAAA;AAAA;;;;;;;;;;;;;;AC9Dd,MAAOW,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;ICmBXlC,4DAAAA,YAAgD;IAC2BA,oDAAAA,eAAQ;IAAAA,0DAAAA,EAAI;;;;;IAEvFA,4DAAAA,YAAgD;IACwBA,oDAAAA,YAAK;IAAAA,0DAAAA,EAAI;;;;;;IAM/EA,4DAAAA,cAAyC;IAErCA,uDAAAA,YAAqC;IAACA,oDAAAA,uBAAe;IAAAA,0DAAAA,EAAI;IAC3DA,4DAAAA,YAAkC;IAChCA,uDAAAA,YAAkC;IAACA,oDAAAA,mBAAW;IAAAA,0DAAAA,EAAI;IACpDA,4DAAAA,YAAkC;IAChCA,uDAAAA,YAA0B;IAACA,oDAAAA,wBAAgB;IAAAA,0DAAAA,EAAI;IACjDA,4DAAAA,aAA8C;IAA3CA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,kBAAU;IAAA,EAAC;IACrBA,uDAAAA,aAAmC;IAACA,oDAAAA,gBAAO;IAAAA,0DAAAA,EAAI;;;;;IAZrDA,4DAAAA,cAA+D;IACCA,wDAAAA;MAAA,OAAS,KAAK;IAAA,EAAC;IAC3EA,oDAAAA,GACF;IAAAA,0DAAAA,EAAI;IACJA,wDAAAA,4DASM;IACRA,0DAAAA,EAAM;;;;IAZFA,uDAAAA,GACF;IADEA,gEAAAA,uCACF;;;;;;;;ACtBN,MAAOW,eAAe;EAG1BjB,YAAoByC,QAAyB;IAAzB,aAAQ,GAARA,QAAQ;EAAqB;EAEjDC,QAAQ,IACR;EAEAC,QAAQ;IACN,IAAI,CAACC,YAAY,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;IAC1D,OAAO,IAAI,CAACF,YAAY;EAC1B;EAEAG,QAAQ;IACNF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACP,QAAQ,CAACQ,OAAO,CAAC,gBAAgB,CAAC;EACzC;;AAhBWhC,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAhB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR5BC,4DAAAA,aAAmE;MAEtBA,oDAAAA,WAAI;MAAAA,0DAAAA,EAAI;MACjDA,4DAAAA,gBAA4M;MAC1MA,uDAAAA,cAAyC;MAC3CA,0DAAAA,EAAS;MACTA,4DAAAA,aAA0E;MAGsDA,oDAAAA,WAAG;MAAAA,0DAAAA,EAAI;MAEnIA,4DAAAA,aAAqB;MACuDA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAI;MAEpFA,4DAAAA,aAAqB;MACsDA,oDAAAA,4BAAoB;MAAAA,0DAAAA,EAAI;MAIrGA,4DAAAA,eAAqB;MAEjBA,wDAAAA,oDAEK;MACLA,wDAAAA,oDAEK;MACLA,wDAAAA,sDAcM;MACRA,0DAAAA,EAAK;;;MAjCiBA,uDAAAA,GAAwC;MAAxCA,wDAAAA,4BAAAA,6DAAAA,SAAwC;MAYvDA,uDAAAA,IAAwB;MAAxBA,wDAAAA,gCAAwB;MAGxBA,uDAAAA,GAAwB;MAAxBA,wDAAAA,gCAAwB;MAGvBA,uDAAAA,GAAwB;MAAxBA,wDAAAA,gCAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1BiD;AAIvC;;;;;;;;;;;;;;ICgBlCA,4DAAAA,cAAiE;IAC/DA,oDAAAA,mCACF;IAAAA,0DAAAA,EAAM;;;;;IAQJA,4DAAAA,gBAGuD;IAAAA,oDAAAA,GAAO;IAAAA,0DAAAA,EAAQ;;;;IAAtEA,wDAAAA,qBAAgB;IAAuCA,uDAAAA,GAAO;IAAPA,+DAAAA,SAAO;;;;;IAEhEA,4DAAAA,cAA4D;IAC1DA,oDAAAA,0BACF;IAAAA,0DAAAA,EAAM;;;;;IAOJA,4DAAAA,gBAG8D;IAAAA,oDAAAA,GAAS;IAAAA,0DAAAA,EAAQ;;;;IAA/EA,wDAAAA,uBAAkB;IAA4CA,uDAAAA,GAAS;IAATA,+DAAAA,WAAS;;;;;IAEzEA,4DAAAA,cAA8D;IAC5DA,oDAAAA,oCACF;IAAAA,0DAAAA,EAAM;;;;;IAQJA,4DAAAA,gBAGiE;IAAAA,oDAAAA,GAAS;IAAAA,0DAAAA,EAAQ;;;;IAAlFA,wDAAAA,uBAAkB;IAA+CA,uDAAAA,GAAS;IAATA,+DAAAA,WAAS;;;;;IAE5EA,4DAAAA,cAA8D;IAC5DA,oDAAAA,sCACF;IAAAA,0DAAAA,EAAM;;;;;IAQNA,4DAAAA,cACwD;IACpDA,oDAAAA,wDACJ;IAAAA,0DAAAA,EAAM;;;;;IASNA,4DAAAA,iBAA0D;IAAAA,oDAAAA,GAAa;IAAAA,0DAAAA,EAAS;;;;IAA1CA,mEAAAA,sBAAmB;IAACA,uDAAAA,GAAa;IAAbA,+DAAAA,eAAa;;;;;IAEvEA,4DAAAA,cACwD;IACpDA,oDAAAA,2BACJ;IAAAA,0DAAAA,EAAM;;;;;IAYNA,4DAAAA,YAAiC;IAAAA,oDAAAA,qBAAc;IAAAA,0DAAAA,EAAQ;;;;;IACvDA,4DAAAA,YAAiC;IAAAA,oDAAAA,oBAAa;IAAAA,0DAAAA,EAAQ;;;;;IAOpDA,4DAAAA,WAA8C;IAAAA,oDAAAA,YAAK;IAAAA,0DAAAA,EAAO;;;;;IACnCA,oDAAAA,WAAI;;;;;IAJ7BA,4DAAAA,cACwD;IACtDA,oDAAAA,sBACA;IAAAA,wDAAAA,kEAA0D;IAC1DA,wDAAAA,uFAAAA,oEAAAA,CAAyC;IAC3CA,0DAAAA,EAAM;;;;;IAFGA,uDAAAA,GAAwB;IAAxBA,wDAAAA,qCAAwB;;;;;IAKnCA,4DAAAA,UAA+B;IAEpBA,oDAAAA,wBAAiB;IAAAA,0DAAAA,EAAQ;IAChCA,uDAAAA,gBAEqB;IACvBA,0DAAAA,EAAM;IAENA,4DAAAA,cAA+B;IACtBA,oDAAAA,2BAAoB;IAAAA,0DAAAA,EAAQ;IACnCA,uDAAAA,gBAEqB;IACvBA,0DAAAA,EAAM;;;;;IASNA,4DAAAA,cACyC;IACvCA,oDAAAA,oCACF;IAAAA,0DAAAA,EAAM;;;;;IAwCNA,4DAAAA,cAC4D;IAC1DA,oDAAAA,8BACF;IAAAA,0DAAAA,EAAM;;;;;IAgCNA,4DAAAA,cAA4D;IAC1DA,oDAAAA,oCACF;IAAAA,0DAAAA,EAAM;;;;;;;;;;;IAIRA,4DAAAA,cAEyB;IAChBA,oDAAAA,gCAAyB;IAAAA,0DAAAA,EAAQ;IACxCA,uDAAAA,gBAKgC;IAClCA,0DAAAA,EAAM;;;IAFJA,uDAAAA,GAC+B;IAD/BA,wDAAAA,aAAAA,6DAAAA,SAC+B;;;;;IAGjCA,4DAAAA,cAEyB;IAChBA,oDAAAA,sBAAe;IAAAA,0DAAAA,EAAQ;IAC9BA,uDAAAA,gBAEqB;IACvBA,0DAAAA,EAAM;;;;;;ADpOd,MAAOa,oBAAoB;EA0B/BnB,YACUmD,EAAe,EACfC,MAAc,EACdC,cAA8B,EAC9BZ,QAAyB;IAHzB,OAAE,GAAFU,EAAE;IACF,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IACd,aAAQ,GAARZ,QAAQ;IAvBlB,iBAAY,GAAkB,CAAC,OAAO,EAAC,WAAW,EAAC,QAAQ,CAAC;IAC5D,gBAAW,GAAkB,CAAC,OAAO,EAAC,MAAM,EAAC,aAAa,CAAC;IAC3D,kBAAa,GAAkB,CAAC,MAAM,EAAC,MAAM,EAAC,OAAO,EAAC,OAAO,CAAC;IAG9D,iBAAY,GAAkB;MAC5Ba,EAAE,EAAE,IAAI;MACRC,QAAQ,EAAE,IAAI;MACdC,IAAI,EAAE,IAAI;MACVC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,IAAI;MACXC,KAAK,EAAE,IAAI;MACXC,GAAG,EAAE,IAAI;MACTC,SAAS,EAAE,IAAI;MACfC,IAAI,EAAE,EAAE;MACRC,GAAG,EAAE;KACN;IACD,aAAQ,GAAG,IAAIvB,4DAAQ,EAAE;EAMc;EAEvCE,QAAQ;IACN,IAAI,CAACsB,qBAAqB,EAAE;IAC5B,IAAI,CAACX,cAAc,CAACY,YAAY,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAClD,IAAI,CAACC,QAAQ,GAAGD,IAAI;MACpBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;EAEAH,qBAAqB;IACnB,IAAI,CAACO,eAAe,GAAG,IAAI,CAACpB,EAAE,CAACqB,KAAK,CAAC;MACnCC,SAAS,EAAE,IAAI,CAACtB,EAAE,CAACqB,KAAK,CAAC;QACvBjB,QAAQ,EAAE,CAAC,GAAG,EAAGL,+DAAmB,CAAC;QACrCU,GAAG,EAAE,CAAC,IAAI,EAAEV,+DAAmB,CAAC;QAChCO,KAAK,EAAE,CAAC,IAAI,EAAEP,+DAAmB,CAAC;QAClCS,KAAK,EAAE,CAAC,IAAI,EAAET,+DAAmB,CAAC;QAClCM,IAAI,EAAE,CAAC,IAAI,EAAEN,+DAAmB,CAAC;QACjCY,IAAI,EAAE,CAAC,IAAI,EAAEZ,+DAAmB;OACjC,CAAC;MACFyB,SAAS,EAAE,IAAI,CAACxB,EAAE,CAACqB,KAAK,CAAC;QACvBd,KAAK,EAAE,CAAC,IAAI,EAAER,+DAAmB,CAAC;QAClCW,SAAS,EAAE,CAAC,IAAI,EAAEX,+DAAmB,CAAC;QACtC0B,UAAU,EAAE,CAAC,IAAI,CAAC;QAClBC,QAAQ,EAAE,CAAC,IAAI,CAAC;QAChBC,WAAW,EAAE,CAAC,IAAI;OACnB,CAAC;MACFC,WAAW,EAAE,IAAI,CAAC5B,EAAE,CAACqB,KAAK,CAAC;QACzBQ,OAAO,EAAE,CAAC,IAAI,CAAC;QACfC,UAAU,EAAE,CAAC,IAAI,CAAC;QAClBC,OAAO,EAAE,CAAC,IAAI,EAAEhC,+DAAmB,CAAC;QACpCiC,QAAQ,EAAE,CAAC,IAAI;OAChB,CAAC;MACFC,SAAS,EAAE,IAAI,CAACjC,EAAE,CAACqB,KAAK,CAAC;QACvBT,GAAG,EAAE,CAAC,IAAI,EAAEb,+DAAmB,CAAC;QAChCmC,YAAY,EAAE,CAAC,IAAI,CAAC;QACpBC,GAAG,EAAE,CAAC,IAAI,CAAC;QACXC,KAAK,EAAE,CAAC,IAAI,CAAC;QACbC,YAAY,EAAE,CAAC,IAAI,CAAC;QACpBC,WAAW,EAAE,CAAC,IAAI;OACnB;KACF,CAAC;EACJ;EAEF;EACE;EACA,IAAIhB,SAAS;IACX,OAAO,IAAI,CAACF,eAAe,CAACmB,QAAQ,CAAC,WAAW,CAAc;EAChE;EAEA,IAAIf,SAAS;IACX,OAAO,IAAI,CAACJ,eAAe,CAACmB,QAAQ,CAAC,WAAW,CAAc;EAChE;EAEA,IAAIX,WAAW;IACb,OAAO,IAAI,CAACR,eAAe,CAACmB,QAAQ,CAAC,aAAa,CAAc;EAClE;EAEA,IAAIN,SAAS;IACX,OAAO,IAAI,CAACb,eAAe,CAACmB,QAAQ,CAAC,WAAW,CAAc;EAChE;EAEA,IAAInC,QAAQ;IACV,OAAO,IAAI,CAACkB,SAAS,CAACiB,QAAQ,CAAC,UAAU,CAAgB;EAC3D;EAEA,IAAI9B,GAAG;IACL,OAAO,IAAI,CAACa,SAAS,CAACiB,QAAQ,CAAC,KAAK,CAAgB;EACtD;EAEA,IAAIjC,KAAK;IACP,OAAO,IAAI,CAACgB,SAAS,CAACiB,QAAQ,CAAC,OAAO,CAAgB;EACxD;EAEA,IAAI/B,KAAK;IACP,OAAO,IAAI,CAACc,SAAS,CAACiB,QAAQ,CAAC,OAAO,CAAgB;EACxD;EAEA,IAAIlC,IAAI;IACN,OAAO,IAAI,CAACiB,SAAS,CAACiB,QAAQ,CAAC,MAAM,CAAgB;EACvD;EAEA,IAAI5B,IAAI;IACN,OAAO,IAAI,CAACW,SAAS,CAACiB,QAAQ,CAAC,MAAM,CAAgB;EACvD;EAEA,IAAIhC,KAAK;IACP,OAAO,IAAI,CAACiB,SAAS,CAACe,QAAQ,CAAC,OAAO,CAAgB;EACxD;EAEA,IAAI7B,SAAS;IACX,OAAO,IAAI,CAACc,SAAS,CAACe,QAAQ,CAAC,WAAW,CAAgB;EAC5D;EAEA,IAAId,UAAU;IACZ,OAAO,IAAI,CAACD,SAAS,CAACe,QAAQ,CAAC,YAAY,CAAgB;EAC7D;EAEA,IAAIb,QAAQ;IACV,OAAO,IAAI,CAACF,SAAS,CAACe,QAAQ,CAAC,UAAU,CAAgB;EAC3D;EAEA,IAAIZ,WAAW;IACb,OAAO,IAAI,CAACH,SAAS,CAACe,QAAQ,CAAC,aAAa,CAAgB;EAC9D;EAEA,IAAIV,OAAO;IACT,OAAO,IAAI,CAACD,WAAW,CAACW,QAAQ,CAAC,SAAS,CAAgB;EAC5D;EAEA,IAAIT,UAAU;IACZ,OAAO,IAAI,CAACF,WAAW,CAACW,QAAQ,CAAC,YAAY,CAAgB;EAC/D;EAEA,IAAIR,OAAO;IACT,OAAO,IAAI,CAACH,WAAW,CAACW,QAAQ,CAAC,SAAS,CAAgB;EAC5D;EAEA,IAAIP,QAAQ;IACV,OAAO,IAAI,CAACJ,WAAW,CAACW,QAAQ,CAAC,UAAU,CAAgB;EAC7D;EAEA,IAAI3B,GAAG;IACL,OAAO,IAAI,CAACqB,SAAS,CAACM,QAAQ,CAAC,KAAK,CAAgB;EACtD;EAEA,IAAIL,YAAY;IACd,OAAO,IAAI,CAACD,SAAS,CAACM,QAAQ,CAAC,cAAc,CAAgB;EAC/D;EAEA,IAAIJ,GAAG;IACL,OAAO,IAAI,CAACF,SAAS,CAACM,QAAQ,CAAC,KAAK,CAAgB;EACtD;EAEA,IAAIH,KAAK;IACP,OAAO,IAAI,CAACH,SAAS,CAACM,QAAQ,CAAC,OAAO,CAAgB;EACxD;EAEA,IAAIF,YAAY;IACd,OAAO,IAAI,CAACJ,SAAS,CAACM,QAAQ,CAAC,cAAc,CAAgB;EAC/D;EAEA,IAAID,WAAW;IACb,OAAO,IAAI,CAACL,SAAS,CAACM,QAAQ,CAAC,aAAa,CAAgB;EAC9D;EAEAC,MAAM;IACJ,IAAI,CAACvC,MAAM,CAACwC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;EAEAC,QAAQ;IACN,IAAI,CAACC,WAAW,GAAG,IAAI;IACvB,IAAG,IAAI,CAACC,YAAY,EAAE,EAAC;MACrB,IAAI,CAACC,WAAW,EAAE;MAClB,IAAI,CAAC3C,cAAc,CAAC4C,WAAW,CAAC,IAAI,CAACC,QAAQ,CAAC;MAC9C,IAAI,CAACzD,QAAQ,CAACQ,OAAO,CAAC,gCAAgC,CAAC;MACvDoB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,eAAe,CAAC;MAEjC,IAAG,IAAI,CAAChB,QAAQ,CAACxE,KAAK,KAAK,GAAG,EAAC;QAC7B,IAAI,CAACqE,MAAM,CAACwC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;OACzC,MAAI;QACH,IAAI,CAACxC,MAAM,CAACwC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;;KAE9B,MAAI;MACH,IAAI,CAACnD,QAAQ,CAAC0D,KAAK,CAAC,wBAAwB,CAAC;;EAEjD;EAEAH,WAAW;IACT,IAAI,CAACE,QAAQ,CAAC5C,EAAE,GAAG,IAAI,CAACD,cAAc,CAAC+C,SAAS,EAAE;IAClD,IAAI,CAACF,QAAQ,CAAC3C,QAAQ,GAAG,CAAC,IAAI,CAACA,QAAQ,CAACxE,KAAK;IAC7C,IAAI,CAACmH,QAAQ,CAACtC,GAAG,GAAG,IAAI,CAACA,GAAG,CAAC7E,KAAK;IAClC,IAAI,CAACmH,QAAQ,CAACzC,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC1E,KAAK;IACtC,IAAI,CAACmH,QAAQ,CAAC1C,IAAI,GAAG,IAAI,CAACA,IAAI,CAACzE,KAAK;IACpC,IAAI,CAACmH,QAAQ,CAACpC,IAAI,GAAG,IAAI,CAACA,IAAI,CAAC/E,KAAK;IACpC,IAAI,CAACmH,QAAQ,CAACvC,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC5E,KAAK;IACtC,IAAI,CAACmH,QAAQ,CAACxC,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC3E,KAAK;IACtC,IAAI,CAACmH,QAAQ,CAACrB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAAC9F,KAAK;IAC5C,IAAI,CAACmH,QAAQ,CAACpB,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC/F,KAAK;IAClD,IAAI,CAACmH,QAAQ,CAACrC,SAAS,GAAG,IAAI,CAACA,SAAS,CAAC9E,KAAK;IAC9C,IAAI,CAACmH,QAAQ,CAACtB,UAAU,GAAG,IAAI,CAACA,UAAU,CAAC7F,KAAK;IAChD,IAAI,CAACmH,QAAQ,CAAClB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACjG,KAAK;IAC1C,IAAI,CAACmH,QAAQ,CAACjB,UAAU,GAAG,IAAI,CAACA,UAAU,CAAClG,KAAK;IAChD,IAAI,CAACmH,QAAQ,CAAChB,OAAO,GAAG,IAAI,CAACA,OAAO,CAACnG,KAAK;IAC1C,IAAI,CAACmH,QAAQ,CAACG,QAAQ,GAAG,IAAI,CAAClB,QAAQ,CAACpG,KAAK;IAC5C,IAAI,CAACmH,QAAQ,CAACnC,GAAG,GAAG,IAAI,CAACA,GAAG,CAAChF,KAAK;IAClC,IAAI,CAACmH,QAAQ,CAACZ,GAAG,GAAG,IAAI,CAACA,GAAG,CAACvG,KAAK;IAClC,IAAI,CAACmH,QAAQ,CAACX,KAAK,GAAG,IAAI,CAACA,KAAK,CAACxG,KAAK;IACtC,IAAI,CAACmH,QAAQ,CAACV,YAAY,GAAG,IAAI,CAACA,YAAY,CAACzG,KAAK;IACpD,IAAI,CAACmH,QAAQ,CAACI,UAAU,GAAG,IAAI,CAACjB,YAAY,CAACtG,KAAK;IAClD,IAAI,CAACmH,QAAQ,CAACT,WAAW,GAAG,IAAI,CAACA,WAAW,CAAC1G,KAAK;IAClD,IAAI,CAACmH,QAAQ,CAACK,QAAQ,GAAG,IAAIC,IAAI,EAAE,CAACC,QAAQ,EAAE;EAChD;EAEAV,YAAY;IACV,IAAG,IAAI,CAACtB,SAAS,CAACiC,OAAO,EAAC;MACxB,IAAI,IAAI,CAACC,QAAQ,EACjB,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,GAAG,IAAI;MACnC,OAAO,KAAK;;IAGd,IAAG,IAAI,CAAClC,SAAS,CAAC+B,OAAO,EAAC;MACxB,IAAI,IAAI,CAACC,QAAQ,EACjB,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,GAAG,IAAI;MACnC,OAAO,KAAK;;IAGd,IAAG,IAAI,CAAC9B,WAAW,CAAC2B,OAAO,EAAC;MAC1B,IAAI,IAAI,CAACC,QAAQ,EACjB,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,GAAG,IAAI;MACnC,OAAO,KAAK;;IAGd,IAAG,IAAI,CAACzB,SAAS,CAACsB,OAAO,EAAC;MACxB,IAAI,IAAI,CAACC,QAAQ,EACjB,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,MAAM,GAAG,IAAI;MACnC,OAAO,KAAK;;IAGd,OAAO,IAAI;EAEb;EAEAC,SAAS,CAACC,KAAa,EAAEC,iBAA0B;IACjD,IAAI,CAAClB,WAAW,GAAG,IAAI;IACvB,IAAI,IAAI,CAACa,QAAQ,EAAEC,IAAI,CAACG,KAAK,CAAC,IAAIC,iBAAiB,EAAE;MACnD,IAAI,CAACL,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CAACF,MAAM,GAAG,IAAI;;EAE3C;;AAlQW1F,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAlB;EAAAgH;IAAA;;;;;;;;;;;;;MCdjC3G,4DAAAA,aAAsB;MAIVA,oDAAAA,yBAAkB;MAAAA,0DAAAA,EAAK;MAE7BA,4DAAAA,aAAuB;MACnBA,wDAAAA;QAAA,OAAY4G,cAAU;MAAA,EAAC;MAC3B5G,4DAAAA,aAAuB;MAKVA,oDAAAA,iBAAS;MAAAA,0DAAAA,EAAI;MAChBA,4DAAAA,eAAiF;MAEzBA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAQ;MAElEA,4DAAAA,iBACsD;MAAAA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAQ;MAEpEA,wDAAAA,2DAEM;MACRA,0DAAAA,EAAM;MAENA,4DAAAA,eAAoC;MAC/BA,oDAAAA,WAAG;MAAAA,0DAAAA,EAAI;MACVA,4DAAAA,eAE0C;MAA1CA,wDAAAA;QAAA;MAAA,EAA8B;MAC5BA,wDAAAA,+DAGsE;MACxEA,0DAAAA,EAAM;MACNA,wDAAAA,2DAEM;MACRA,0DAAAA,EAAM;MAENA,4DAAAA,eAAoC;MAC/BA,oDAAAA,qBAAa;MAAAA,0DAAAA,EAAI;MACpBA,4DAAAA,eACiC;MAAjCA,wDAAAA;QAAA;MAAA,EAAgC;MAC9BA,wDAAAA,+DAG+E;MACjFA,0DAAAA,EAAM;MACNA,wDAAAA,2DAEM;MACRA,0DAAAA,EAAM;MAENA,4DAAAA,eAAoC;MAC/BA,oDAAAA,uBAAe;MAAAA,0DAAAA,EAAI;MACtBA,4DAAAA,eAEiC;MAAjCA,wDAAAA;QAAA;MAAA,EAAgC;MAC9BA,wDAAAA,+DAGkF;MACpFA,0DAAAA,EAAM;MACNA,wDAAAA,2DAEM;MACRA,0DAAAA,EAAM;MAENA,4DAAAA,eAAoC;MAC3BA,oDAAAA,mCAA2B;MAAAA,0DAAAA,EAAQ;MAC1CA,4DAAAA,iBAEgC;MAAhCA,wDAAAA;QAAA;MAAA,EAA+B;MAF/BA,0DAAAA,EAEgC;MAChCA,wDAAAA,2DAGM;MACRA,0DAAAA,EAAM;MAENA,4DAAAA,eAAoC;MAC3BA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAQ;MACnBA,4DAAAA,kBAEgC;MAAhCA,wDAAAA;QAAA;MAAA,EAA+B;MAC/BA,4DAAAA,kBAAiB;MAAAA,oDAAAA,uBAAe;MAAAA,0DAAAA,EAAS;MACzCA,wDAAAA,iEAAgF;MAChFA,0DAAAA,EAAS;MACTA,wDAAAA,2DAGM;MACRA,0DAAAA,EAAM;MAENA,4DAAAA,eAAoC;MAEhCA,wDAAAA;QAAA,OAAS4G,cAAU,CAAC,sBAAkB;MAAA,EAAC;MAAC5G,oDAAAA,YAAI;MAAAA,0DAAAA,EAAS;MAI7DA,4DAAAA,eAA0D;MAGpDA,wDAAAA,+DAAuD;MACvDA,wDAAAA,+DAAsD;MACtDA,4DAAAA,iBAEiC;MAAjCA,wDAAAA;QAAA;MAAA,EAAgC;MAFhCA,0DAAAA,EAEiC;MACjCA,wDAAAA,2DAKM;MACRA,0DAAAA,EAAM;MAENA,wDAAAA,2DAcM;MAENA,4DAAAA,eAA+B;MACtBA,oDAAAA,gCAAwB;MAAAA,0DAAAA,EAAQ;MACvCA,4DAAAA,iBAG4B;MAD5BA,wDAAAA;QAAA;MAAA,EAAoC;MAFpCA,0DAAAA,EAG4B;MAC5BA,wDAAAA,2DAGM;MACRA,0DAAAA,EAAM;MAENA,4DAAAA,eAA+B;MACtBA,oDAAAA,iCAAyB;MAAAA,0DAAAA,EAAQ;MACxCA,uDAAAA,iBAEqB;MACvBA,0DAAAA,EAAM;MAENA,4DAAAA,eAA+B;MAE7BA,wDAAAA;QAAA,OAAS4G,cAAU,CAAC,sBAAkB;MAAA,EAAC;MAAC5G,oDAAAA,YAAI;MAAAA,0DAAAA,EAAS;MAErDA,4DAAAA,kBACwC;MAAxCA,wDAAAA;QAAA,OAAS4G,cAAU,CAAC,sBAAkB;MAAA,EAAC;MAAC5G,oDAAAA,YAAI;MAAAA,0DAAAA,EAAS;MAI3DA,4DAAAA,eAAmD;MAGtCA,oDAAAA,aAAK;MAAAA,0DAAAA,EAAQ;MACpBA,uDAAAA,iBAEqB;MACvBA,0DAAAA,EAAM;MAENA,4DAAAA,eAA+B;MACtBA,oDAAAA,mBAAW;MAAAA,0DAAAA,EAAQ;MAC1BA,uDAAAA,iBAEqB;MACvBA,0DAAAA,EAAM;MAENA,4DAAAA,eAA+B;MACtBA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAQ;MACtBA,uDAAAA,iBAE0B;MAC1BA,wDAAAA,2DAGM;MACRA,0DAAAA,EAAM;MAENA,4DAAAA,eAA+B;MACtBA,oDAAAA,gBAAQ;MAAAA,0DAAAA,EAAQ;MACvBA,uDAAAA,iBAEqB;MACvBA,0DAAAA,EAAM;MAENA,4DAAAA,eAA+B;MAE7BA,wDAAAA;QAAA,OAAS4G,cAAU,CAAC,wBAAoB;MAAA,EAAC;MAAC5G,oDAAAA,YAAI;MAAAA,0DAAAA,EAAS;MAEvDA,4DAAAA,kBAC0C;MAA1CA,wDAAAA;QAAA,OAAS4G,cAAU,CAAC,wBAAoB;MAAA,EAAC;MAAC5G,oDAAAA,YAAI;MAAAA,0DAAAA,EAAS;MAI7DA,4DAAAA,eAAuD;MAE9CA,oDAAAA,sBAAa;MAAAA,0DAAAA,EAAI;MACpBA,4DAAAA,gBACsB;MAGPA,oDAAAA,aACb;MAAAA,0DAAAA,EAAQ;MACRA,4DAAAA,kBACoD;MAAAA,oDAAAA,YACpD;MAAAA,0DAAAA,EAAQ;MAEVA,wDAAAA,6DAEM;MACRA,0DAAAA,EAAM;MAGNA,wDAAAA,6DAUM;MAENA,wDAAAA,6DAOM;MAENA,4DAAAA,gBAA+B;MAC1BA,oDAAAA,wBAAe;MAAAA,0DAAAA,EAAI;MACtBA,4DAAAA,gBAEwB;MAE6BA,oDAAAA,YAAG;MAAAA,0DAAAA,EAAQ;MAC9DA,4DAAAA,kBACoD;MAAAA,oDAAAA,WAAE;MAAAA,0DAAAA,EAAQ;MAIlEA,4DAAAA,gBAA+B;MAC1BA,oDAAAA,sBAAa;MAAAA,0DAAAA,EAAI;MACpBA,4DAAAA,gBAC+B;MAEyBA,oDAAAA,aAAI;MAAAA,0DAAAA,EAAQ;MAClEA,4DAAAA,kBACuD;MAAAA,oDAAAA,aAAI;MAAAA,0DAAAA,EAAQ;MACnEA,4DAAAA,kBACuD;MAAAA,oDAAAA,cAAK;MAAAA,0DAAAA,EAAQ;MACpEA,4DAAAA,kBACuD;MAAAA,oDAAAA,cAAK;MAAAA,0DAAAA,EAAQ;MAIxEA,4DAAAA,gBAA+B;MACtBA,oDAAAA,oBAAW;MAAAA,0DAAAA,EAAQ;MAC1BA,uDAAAA,qBAGoB;MACtBA,0DAAAA,EAAM;MAENA,4DAAAA,gBAA+B;MAE3BA,wDAAAA;QAAA,OAAS4G,cAAU,CAAC,sBAAkB;MAAA,EAAC;MAAC5G,oDAAAA,aAAI;MAAAA,0DAAAA,EAAS;MAErDA,4DAAAA,mBACwC;MAAxCA,wDAAAA;QAAA,OAAS4G,cAAU,CAAC,sBAAkB;MAAA,EAAC;MAAC5G,oDAAAA,aAAI;MAAAA,0DAAAA,EAAS;MAI7DA,4DAAAA,gBAAsB;MAGqBA,oDAAAA,eAAM;MAAAA,0DAAAA,EAAS;MAACA,uDAAAA,WAAI;MACvDA,oDAAAA,qCACJ;MAAAA,0DAAAA,EAAM;MAERA,4DAAAA,gBAA+B;MAE7BA,wDAAAA;QAAA,OAAS4G,cAAU,CAAC,EAAE,IAAI,CAAC;MAAA,EAAC;MAAC5G,oDAAAA,aAAI;MAAAA,0DAAAA,EAAS;MAE1CA,4DAAAA,mBAAiE;MAAAA,oDAAAA,eAAM;MAAAA,0DAAAA,EAAS;MAChFA,4DAAAA,mBAAkE;MAAAA,oDAAAA,aAAI;MAAAA,0DAAAA,EAAS;MAS3FA,4DAAAA,gBAAmB;MAEXA,oDAAAA,8BAAqB;MAAAA,0DAAAA,EAAK;MAEhCA,4DAAAA,gBAAoC;MAClCA,uDAAAA,8BAAoF;MACtFA,0DAAAA,EAAM;;;MApTwBA,uDAAAA,GAA6B;MAA7BA,wDAAAA,kCAA6B;MAcrBA,uDAAAA,IAAqC;MAArCA,wDAAAA,iDAAqC;MAS/DA,uDAAAA,GAA8B;MAA9BA,wDAAAA,iCAA8B;MAEZA,uDAAAA,GAAY;MAAZA,wDAAAA,YAAAA,6DAAAA,UAAY;MAIJA,uDAAAA,GAAgC;MAAhCA,wDAAAA,4CAAgC;MAQ1DA,uDAAAA,GAAgC;MAAhCA,wDAAAA,mCAAgC;MAEZA,uDAAAA,GAAe;MAAfA,wDAAAA,6BAAe;MAITA,uDAAAA,GAAkC;MAAlCA,wDAAAA,8CAAkC;MAS5DA,uDAAAA,GAAgC;MAAhCA,wDAAAA,mCAAgC;MAEZA,uDAAAA,GAAc;MAAdA,wDAAAA,4BAAc;MAIRA,uDAAAA,GAAkC;MAAlCA,wDAAAA,8CAAkC;MAS5DA,uDAAAA,GAA+B;MAA/BA,wDAAAA,kCAA+B;MAE5BA,uDAAAA,GAAmD;MAAnDA,wDAAAA,mEAAmD;MAStDA,uDAAAA,GAA+B;MAA/BA,wDAAAA,kCAA+B;MAENA,uDAAAA,GAAW;MAAXA,wDAAAA,yBAAW;MAGjCA,uDAAAA,GAAmD;MAAnDA,wDAAAA,mEAAmD;MAc9CA,uDAAAA,GAAuB;MAAvBA,wDAAAA,iCAAuB;MACvBA,uDAAAA,GAAuB;MAAvBA,wDAAAA,iCAAuB;MAG/BA,uDAAAA,GAAgC;MAAhCA,wDAAAA,mCAAgC;MAE/BA,uDAAAA,GAAqD;MAArDA,wDAAAA,qEAAqD;MAOlDA,uDAAAA,GAAuB;MAAvBA,wDAAAA,iCAAuB;MAoB3BA,uDAAAA,GAAoC;MAApCA,wDAAAA,uCAAoC;MAGnCA,uDAAAA,GAAsC;MAAtCA,wDAAAA,kDAAsC;MA2CtCA,uDAAAA,IAAyD;MAAzDA,wDAAAA,yEAAyD;MAkChCA,uDAAAA,IAAgC;MAAhCA,wDAAAA,4CAAgC;MAO3DA,uDAAAA,GAAkB;MAAlBA,wDAAAA,4BAAkB;MAYlBA,uDAAAA,GAAkB;MAAlBA,wDAAAA,4BAAkB;MA8ERA,uDAAAA,IAAyB;MAAzBA,wDAAAA,8BAAyB;;;;;;;;;;;;;;;;;;;;;;;;;;;ICxT9CA,uDAAAA,cAA4F;;;;IAA3CA,oEAAAA,yDAAAA,2DAAAA,CAA0C;;;;;IAC3FA,uDAAAA,cAAwF;;;;;IACxFA,4DAAAA,aAA4E;IAEMA,uDAAAA,YAAyC;IAAAA,0DAAAA,EAAS;IAElIA,4DAAAA,aAA6B;IACKA,uDAAAA,YAAwC;IAAAA,0DAAAA,EAAS;;;;IAHjDA,uDAAAA,GAA6C;IAA7CA,oEAAAA,2DAA6C;;;;;IAWjFA,4DAAAA,WAA4B;IAAAA,oDAAAA,QAAC;IAAAA,0DAAAA,EAAO;;;;;IAIpCA,4DAAAA,WAA+C;IAAAA,oDAAAA,gBAAS;IAAAA,0DAAAA,EAAO;;;ACT7D,MAAOS,qBAAqB;AAArBA,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAd;EAAAkH;IAAAjB;IAAAkB;EAAA;EAAAlH;EAAAC;EAAAC;EAAAC;IAAA;MDZlCC,4DAAAA,aAAkB;MAEdA,wDAAAA,yDAA4F;MAC5FA,wDAAAA,yDAAwF;MACxFA,wDAAAA,uDAOK;MACPA,0DAAAA,EAAM;MACNA,4DAAAA,aAA2B;MACPA,oDAAAA,GAAwC;MAAAA,0DAAAA,EAAK;MAE/DA,oDAAAA,GACA;MAAAA,wDAAAA,2DAAoC;MACpCA,oDAAAA,IAEA;MAAAA,4DAAAA,aAAkB;MAAAA,oDAAAA,IAClB;MAAAA,wDAAAA,6DAA+D;MAACA,oDAAAA,wBAAe;MAAAA,0DAAAA,EAAK;MAEpFA,uDAAAA,aAAsB;MAEtBA,4DAAAA,aAAiB;MAAAA,oDAAAA,eAAO;MAAAA,4DAAAA,gBAA6B;MAAAA,oDAAAA,IAAuB;MAAAA,0DAAAA,EAAO;MAACA,oDAAAA,iBAC3E;MAAAA,4DAAAA,gBAA6B;MAAAA,oDAAAA,IAA6B;MAAAA,0DAAAA,EAAO;;;MAxBpEA,uDAAAA,GAAoB;MAApBA,wDAAAA,4BAAoB;MACpBA,uDAAAA,GAAqB;MAArBA,wDAAAA,6BAAqB;MACtBA,uDAAAA,GAAgB;MAAhBA,wDAAAA,wBAAgB;MAUHA,uDAAAA,GAAwC;MAAxCA,gEAAAA,yDAAwC;MAE1DA,uDAAAA,GACA;MADAA,gEAAAA,gCACA;MAAOA,uDAAAA,GAAmB;MAAnBA,wDAAAA,2BAAmB;MAC1BA,uDAAAA,GAEA;MAFAA,gEAAAA,6BAEA;MAAkBA,uDAAAA,GAClB;MADkBA,gEAAAA,6BAClB;MAAOA,uDAAAA,GAAsC;MAAtCA,wDAAAA,8CAAsC;MAIQA,uDAAAA,GAAuB;MAAvBA,gEAAAA,iCAAuB;MACtCA,uDAAAA,GAA6B;MAA7BA,gEAAAA,uCAA6B;;;;;;;;;;;;;;;;;;;;;;;;AExBrB;;;;AAO5C,MAAOsB,6BAA6B;EAE1C5B,YACUuH,cAA8B,EAC9BnE,MAAc;IADd,mBAAc,GAAdmE,cAAc;IACd,WAAM,GAANnE,MAAM;EAAa;EAE3BnB,OAAO,CAACuF,KAA6B,EAAEC,KAA0B;IAE7D,MAAMC,MAAM,GAAGF,KAAK,CAACG,MAAM,CAAC,IAAI,CAAC;IACjC,OAAO,IAAI,CAACJ,cAAc,CAACK,WAAW,CAAC,CAACF,MAAM,CAAC,CAACG,IAAI,CAClDR,gDAAU,CAAClB,KAAK,IAAG;MACjB,IAAI,CAAC/C,MAAM,CAACwC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC3B,OAAO0B,wCAAE,CAAC,IAAI,CAAC;IACjB,CAAC,CAAC,CACH;EACL;;AAfW1F,6BAA6B;mBAA7BA,6BAA6B;AAAA;AAA7BA,6BAA6B;SAA7BA,6BAA6B;EAAAkG,SAA7BlG,6BAA6B;EAAAmG,YAF5B;AAAM;;;;;;;;;;;;;;;;;;;;;ACL0E;AAC5C;;;;;;;;;ICC1CzH,uDAAAA,cAA4F;;;;IAA3CA,oEAAAA,yDAAAA,2DAAAA,CAA0C;;;;;IAC3FA,uDAAAA,cAAwF;;;ADM1F,MAAOc,uBAAuB;EAMlCpB,YACUwH,KAAqB,EACrBpE,MAAc,EACdC,cAA8B;IAF9B,UAAK,GAALmE,KAAK;IACL,WAAM,GAANpE,MAAM;IACN,mBAAc,GAAdC,cAAc;IAPxB,aAAQ,GAAG,IAAIb,4DAAQ,EAAE;EAOmB;EAE5CE,QAAQ;IACN,IAAI,CAACuF,UAAU,GAAG,CAAC,IAAI,CAACT,KAAK,CAACU,QAAQ,CAACP,MAAM,CAAC,IAAI,CAAC;IACnD,IAAI,CAACH,KAAK,CAACrD,IAAI,CAACD,SAAS,CACtBC,IAAoB,IAAI;MACvB,IAAI,CAAC+B,QAAQ,GAAG/B,IAAI,CAAC,KAAK,CAAC;IAC7B,CAAC,CACF;IAED;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA,IAAI,CAACgE,cAAc,GAAG,CACpB;MACEC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,OAAO;MACfC,iBAAiB,EAAE,CAAC;MACpBC,cAAc,EAAEP,0EAAyB;MACzCS,OAAO,EAAE;KACV,CACF;IAED,IAAI,CAACC,aAAa,GAAG,CACnB;MACEC,KAAK,EAAE,8BAA8B;MACrCC,MAAM,EAAE,8BAA8B;MACtCC,GAAG,EAAE;KACN,EACD;MACEF,KAAK,EAAE,8BAA8B;MACrCC,MAAM,EAAE,8BAA8B;MACtCC,GAAG,EAAE;KACN,EACD;MACEF,KAAK,EAAE,8BAA8B;MACrCC,MAAM,EAAE,8BAA8B;MACtCC,GAAG,EAAE;KACN,EAAC;MACAF,KAAK,EAAE,8BAA8B;MACrCC,MAAM,EAAE,8BAA8B;MACtCC,GAAG,EAAE;KACN,EACD;MACEF,KAAK,EAAE,8BAA8B;MACrCC,MAAM,EAAE,8BAA8B;MACtCC,GAAG,EAAE;KACN,EACD;MACEF,KAAK,EAAE,8BAA8B;MACrCC,MAAM,EAAE,8BAA8B;MACtCC,GAAG,EAAE;KACN,CACF;EAEH;;AAxEWzH,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAnB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXpCC,4DAAAA,aAAwB;MAIhBA,wDAAAA,2DAA4F;MAC5FA,wDAAAA,2DAAwF;MAC1FA,0DAAAA,EAAM;MACNA,4DAAAA,aAAuB;MACEA,oDAAAA,GAAiB;MAAAA,0DAAAA,EAAK;MAC7CA,4DAAAA,UAAK;MACOA,oDAAAA,IAA6D;MAAAA,0DAAAA,EAAS;MAElFA,4DAAAA,WAAK;MACMA,oDAAAA,IAAoB;MAAAA,0DAAAA,EAAS;MACjCA,uDAAAA,UAAI;MACXA,4DAAAA,WAAK;MACOA,oDAAAA,oBAAY;MAAAA,0DAAAA,EAAS;MAC7BA,oDAAAA,IACJ;MAAAA,0DAAAA,EAAM;MAENA,4DAAAA,WAAK;MACOA,oDAAAA,qBAAa;MAAAA,0DAAAA,EAAS;MAC9BA,oDAAAA,IACJ;MAAAA,0DAAAA,EAAM;MACNA,4DAAAA,WAAK;MACOA,oDAAAA,yBAAiB;MAAAA,0DAAAA,EAAS;MAClCA,oDAAAA,IACJ;MAAAA,0DAAAA,EAAM;MAERA,4DAAAA,cAAyB;MAEWA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAS;MAC7CA,4DAAAA,kBAAgC;MAAAA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAS;MAKxDA,4DAAAA,eAA0B;MAIdA,oDAAAA,gBAAQ;MAAAA,0DAAAA,EAAK;MACjBA,4DAAAA,eAAiB;MAGGA,oDAAAA,oBAAY;MAAAA,0DAAAA,EAAS;MAC7BA,4DAAAA,SAAG;MAAAA,oDAAAA,IAAiB;MAAAA,0DAAAA,EAAI;MAG5BA,4DAAAA,eAAqB;MACTA,oDAAAA,oBAAY;MAAAA,0DAAAA,EAAS;MAC7BA,4DAAAA,SAAG;MAAAA,oDAAAA,IAAoB;MAAAA,0DAAAA,EAAI;MAG/BA,4DAAAA,eAAqB;MACTA,oDAAAA,uBAAe;MAAAA,0DAAAA,EAAS;MAChCA,4DAAAA,SAAG;MAAAA,oDAAAA,IAAgB;MAAAA,0DAAAA,EAAI;MAG3BA,4DAAAA,eAAqB;MACTA,oDAAAA,iBAAS;MAAAA,0DAAAA,EAAS;MAC1BA,4DAAAA,SAAG;MAAAA,oDAAAA,IAAuB;MAAAA,0DAAAA,EAAI;MAItCA,4DAAAA,eAAsB;MAENA,oDAAAA,qBAAa;MAAAA,0DAAAA,EAAS;MAC9BA,4DAAAA,SAAG;MAAAA,oDAAAA,IAAyB;MAAAA,0DAAAA,EAAI;MAGpCA,4DAAAA,eAAqB;MACTA,oDAAAA,uBAAe;MAAAA,0DAAAA,EAAS;MAChCA,4DAAAA,SAAG;MAAAA,oDAAAA,IAAkB;MAAAA,0DAAAA,EAAI;MAG7BA,4DAAAA,eAAqB;MACTA,oDAAAA,wBAAgB;MAAAA,0DAAAA,EAAS;MACjCA,4DAAAA,SAAG;MAAAA,oDAAAA,IAAqB;MAAAA,0DAAAA,EAAI;MAEhCA,4DAAAA,eAAqB;MACTA,oDAAAA,mBAAW;MAAAA,0DAAAA,EAAS;MAC5BA,4DAAAA,SAAG;MAAAA,oDAAAA,IAAwB;MAAAA,0DAAAA,EAAI;MAGvCA,4DAAAA,eAAuB;MAEPA,oDAAAA,sBAAc;MAAAA,0DAAAA,EAAS;MAC/BA,4DAAAA,SAAG;MAAAA,oDAAAA,IAAwB;MAAAA,0DAAAA,EAAI;MAK7CA,4DAAAA,eAAuB;MAEfA,oDAAAA,eAAO;MAAAA,0DAAAA,EAAK;MAChBA,4DAAAA,eAAqB;MACTA,oDAAAA,IAAoB;MAAAA,0DAAAA,EAAS;MAAAA,uDAAAA,UAAK;MAC1CA,4DAAAA,cAAQ;MAAAA,oDAAAA,IAAqB;MAAAA,0DAAAA,EAAS;MAAAA,uDAAAA,UAAK;MAC3CA,4DAAAA,eAAQ;MAAAA,oDAAAA,KAAiB;MAAAA,0DAAAA,EAAS;MAK1CA,4DAAAA,gBAAsB;MACpBA,uDAAAA,wBAAmG;MACrGA,0DAAAA,EAAM;MACNA,4DAAAA,gBAAuB;MACjBA,oDAAAA,uBAAc;MAAAA,0DAAAA,EAAK;MACvBA,oDAAAA,+GACF;MAAAA,0DAAAA,EAAM;;;MA1GAA,uDAAAA,GAAoB;MAApBA,wDAAAA,4BAAoB;MACpBA,uDAAAA,GAAqB;MAArBA,wDAAAA,6BAAqB;MAGJA,uDAAAA,GAAiB;MAAjBA,+DAAAA,mBAAiB;MAE5BA,uDAAAA,GAA6D;MAA7DA,gEAAAA,mFAA6D;MAG9DA,uDAAAA,GAAoB;MAApBA,gEAAAA,8BAAoB;MAI3BA,uDAAAA,GACJ;MADIA,gEAAAA,uCACJ;MAIIA,uDAAAA,GACJ;MADIA,gEAAAA,wCACJ;MAGIA,uDAAAA,GACJ;MADIA,gEAAAA,8BACJ;MAmBiBA,uDAAAA,IAAiB;MAAjBA,+DAAAA,mBAAiB;MAKjBA,uDAAAA,GAAoB;MAApBA,+DAAAA,sBAAoB;MAKpBA,uDAAAA,GAAgB;MAAhBA,+DAAAA,kBAAgB;MAKhBA,uDAAAA,GAAuB;MAAvBA,+DAAAA,yBAAuB;MAOvBA,uDAAAA,GAAyB;MAAzBA,+DAAAA,2BAAyB;MAKzBA,uDAAAA,GAAkB;MAAlBA,+DAAAA,oBAAkB;MAKlBA,uDAAAA,GAAqB;MAArBA,+DAAAA,uBAAqB;MAIrBA,uDAAAA,GAAwB;MAAxBA,+DAAAA,0BAAwB;MAMxBA,uDAAAA,GAAwB;MAAxBA,+DAAAA,0BAAwB;MASzBA,uDAAAA,GAAoB;MAApBA,+DAAAA,sBAAoB;MACpBA,uDAAAA,GAAqB;MAArBA,+DAAAA,uBAAqB;MACrBA,uDAAAA,GAAiB;MAAjBA,+DAAAA,mBAAiB;MAMlBA,uDAAAA,GAA0B;MAA1BA,wDAAAA,+BAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC9F/CA,uDAAAA,WAAoE;;;;;IACpEA,uDAAAA,WAAmE;;;;;IAInEA,4DAAAA,cAAwH;IAElHA,uDAAAA,4BAA6D;IACjEA,0DAAAA,EAAM;;;;IADiBA,uDAAAA,GAAqB;IAArBA,wDAAAA,yBAAqB;;;;;;ACP1C,MAAOU,qBAAqB;EAQhChB,YAAoBwH,KAAqB,EAAUnE,cAA8B;IAA7D,UAAK,GAALmE,KAAK;IAA0B,mBAAc,GAAdnE,cAAc;IAPjE,aAAQ,GAAG,CAAC;IACZ,eAAU,GAAoB,EAAE;IAChC,UAAK,GAAG,IAAImD,IAAI,EAAE;IAClB,SAAI,GAAG,EAAE;IAET,gBAAW,GAAG,EAAE;IAChB,kBAAa,GAAG,KAAK;EAC+D;EAEpF9D,QAAQ;IACN,IAAI,IAAI,CAAC8E,KAAK,CAACU,QAAQ,CAACY,GAAG,CAACrC,QAAQ,EAAE,EAAC;MACrC,IAAI,CAAClD,QAAQ,GAAG,CAAC;;IAEnB,IAAI,CAACF,cAAc,CAAC0F,gBAAgB,CAAC,IAAI,CAACxF,QAAQ,CAAC,CAACW,SAAS,CAC3DC,IAAI,IAAE;MACA,IAAI,CAAC6E,UAAU,GAAG7E,IAAI;MACtBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACnB,CAAC,EAAEgC,KAAK,IAAG;MACT9B,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;MACxBD,OAAO,CAACC,GAAG,CAAC6B,KAAK,CAAC;IACpB,CAAC,CACN;EACH;EAEA8C,YAAY;IACV,IAAI,CAACC,UAAU,GAAG,IAAI,CAACpF,IAAI;EAC7B;EAEAqF,iBAAiB;IACf,IAAI,CAACD,UAAU,GAAG,EAAE;IACpB,IAAI,CAACpF,IAAI,GAAG,EAAE;EAChB;EAEAsF,eAAe;IACb,IAAG,IAAI,CAACC,aAAa,KAAK,MAAM,EAAC;MAC/B,IAAI,CAACA,aAAa,GAAG,KAAK;KAC3B,MAAI;MACH,IAAI,CAACA,aAAa,GAAG,MAAM;;EAE/B;;AAxCWrI,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAf;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDXlCC,4DAAAA,YAAO;MAAAA,oDAAAA,0BAAmB;MAAAA,0DAAAA,EAAQ;MAClCA,4DAAAA,eAA0B;MAAnBA,wDAAAA;QAAA;MAAA,EAAkB;MAAzBA,0DAAAA,EAA0B;MAC1BA,4DAAAA,gBAA+C;MAAzBA,wDAAAA;QAAA,OAAS4G,kBAAc;MAAA,EAAC;MAAC5G,oDAAAA,aAAM;MAAAA,0DAAAA,EAAS;MAC9DA,4DAAAA,gBAAoD;MAA9BA,wDAAAA;QAAA,OAAS4G,uBAAmB;MAAA,EAAC;MAAC5G,oDAAAA,YAAK;MAAAA,0DAAAA,EAAS;MAElEA,4DAAAA,YAAO;MAAAA,oDAAAA,qBAAc;MAAAA,0DAAAA,EAAQ;MAC7BA,4DAAAA,gBAAkC;MAA1BA,wDAAAA;QAAA;MAAA,EAAyB;MAC/BA,4DAAAA,iBAAqB;MAAAA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAS;MAClCA,4DAAAA,iBAAsB;MAAAA,oDAAAA,aAAK;MAAAA,0DAAAA,EAAS;MAEtCA,4DAAAA,iBAAkD;MAA5BA,wDAAAA;QAAA,OAAS4G,qBAAiB;MAAA,EAAC;MAAC5G,oDAAAA,aAChD;MAAAA,wDAAAA,uDAAoE;MACpEA,wDAAAA,uDAAmE;MACrEA,0DAAAA,EAAS;MAETA,4DAAAA,cAAiB;MACfA,wDAAAA,2DAII;;;MACNA,0DAAAA,EAAM;;;MApBCA,uDAAAA,GAAkB;MAAlBA,wDAAAA,qBAAkB;MAKjBA,uDAAAA,GAAyB;MAAzBA,wDAAAA,4BAAyB;MAK3BA,uDAAAA,GAA2B;MAA3BA,wDAAAA,qCAA2B;MAC3BA,uDAAAA,GAA4B;MAA5BA,wDAAAA,sCAA4B;MAINA,uDAAAA,GAA2E;MAA3EA,wDAAAA,YAAAA,yDAAAA,QAAAA,yDAAAA,iDAAAA,6DAAAA,+CAA2E;;;;;;;;;;;;;;;;;;;;;;AEfhE;;AAKjC,MAAOoB,eAAe;EAE5B1B,eAAgB;EAEhBiD,OAAO,CAACqG,OAAe;IACrB7G,+CAAgB,CAAC6G,OAAO,CAAC;EAC3B;EAEAC,OAAO,CAACD,OAAe;IACrB7G,+CAAgB,CAAC6G,OAAO,CAAC;EAC3B;EAEAnD,KAAK,CAACmD,OAAe;IACnB7G,6CAAc,CAAC6G,OAAO,CAAC;EACzB;;AAda5H,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAoG,SAAfpG,eAAe;EAAAqG,YAFd;AAAM;;;;;;;;;;;;;;;;ACCd,MAAOpG,WAAW;EAExB3B,eAAgB;EAEhBwJ,QAAQ,CAACC,IAAS;IAChB;IACA,IAAIC,SAAS,GAAG,EAAE;IAClB,IAAG7G,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAC;MAC/B4G,SAAS,GAAGC,IAAI,CAACC,KAAK,CAAC/G,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;;IAE/D,OAAO4G,SAAS,CAACG,IAAI,CAAEC,CAAoC,IAAKA,CAAC,CAACC,QAAQ,KAAKN,IAAI,CAACM,QAAQ,IAAID,CAAC,CAACE,QAAQ,KAAKP,IAAI,CAACO,QAAQ,CAAC;EAC/H;;AAXarI,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAmG,SAAXnG,WAAW;EAAAoG,YAFV;AAAM;;;;;;;;;;;;;;;;;;ACDmB;AAEsB;;;AAKvD,MAAO7G,cAAc;EAGzBlB,YAAoBmK,IAAe;IAAf,SAAI,GAAJA,IAAI;IADxB,YAAO,GAAGD,0EAAmB;EACU;EAEvCjG,YAAY;IACV,OAAO,IAAI,CAACkG,IAAI,CAACE,GAAG,CAAW,IAAI,CAACD,OAAO,GAAG,cAAc,CAAC;EAC/D;EAEAxC,WAAW,CAAC0C,EAAU;IACpB,OAAO,IAAI,CAACvB,gBAAgB,EAAE,CAAClB,IAAI,CACjCoC,yCAAG,CAACM,eAAe,IAAG;MACpB;MACA,OAAOA,eAAe,CAACV,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACxG,EAAE,KAAKgH,EAAE,CAAC;IAC/C,CAAC,CAAC,CACH;EACH;EAEAvB,gBAAgB,CAACxF,QAAiB;IAChC,OAAO,IAAI,CAAC4G,IAAI,CAACE,GAAG,CAAC,sBAAsB,CAAC,CAACxC,IAAI,CAC/CoC,yCAAG,CAAC9F,IAAI,IAAG;MACT,MAAMoG,eAAe,GAAoB,EAAE;MAC3C,MAAMC,QAAQ,GAAGb,IAAI,CAACc,SAAS,CAACtG,IAAI,CAAC;MACrC,MAAMuG,GAAG,GAAoBf,IAAI,CAACC,KAAK,CAACY,QAAQ,CAAC;MACjD,MAAMG,eAAe,GAAGhB,IAAI,CAACC,KAAK,CAAC/G,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC;MAC3E,IAAG6H,eAAe,EAAC;QACjB,KAAI,MAAML,EAAE,IAAIK,eAAe,EAAC;UAC9B,IAAGpH,QAAQ,EAAC;YACV,IAAGoH,eAAe,CAACL,EAAE,CAAC,CAAC/G,QAAQ,IAAIA,QAAQ,EAAC;cAC1CgH,eAAe,CAAClL,IAAI,CAACsL,eAAe,CAACL,EAAE,CAAC,CAAC;;WAE5C,MAAI;YACHC,eAAe,CAAClL,IAAI,CAACsL,eAAe,CAACL,EAAE,CAAC,CAAC;;;;MAM/C,KAAI,MAAMA,EAAE,IAAII,GAAG,EAAC;QAClB,IAAGnH,QAAQ,EAAC;UACV,IAAGmH,GAAG,CAACJ,EAAE,CAAC,CAAC/G,QAAQ,IAAIA,QAAQ,EAAC;YAC9BgH,eAAe,CAAClL,IAAI,CAACqL,GAAG,CAACJ,EAAE,CAAC,CAAC;;SAEhC,MAAI;UACHC,eAAe,CAAClL,IAAI,CAACqL,GAAG,CAACJ,EAAE,CAAC,CAAC;;;MAGjC,OAAOC,eAAe;IACxB,CAAC,CAAC,CACH;EACH;EAEAtE,WAAW,CAACC,QAAkB;IAC5B,IAAI0E,OAAO,GAAG,CAAC1E,QAAQ,CAAC;IAExB;IACA,IAAGrD,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,EAAC;MACjC8H,OAAO,GAAG,CAAC1E,QAAQ,EACP,GAAGyD,IAAI,CAACC,KAAK,CAAC/G,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,CAAC;;IAErED,YAAY,CAACgI,OAAO,CAAC,SAAS,EAAElB,IAAI,CAACc,SAAS,CAACG,OAAO,CAAC,CAAC;EAC1D;EAEAxE,SAAS;IACP,IAAGvD,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,EAAC;MAC7B,OAAO,EAAED,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;KAC/C,MAAI;MACHD,YAAY,CAACgI,OAAO,CAAC,KAAK,EAAC,KAAK,CAAC;MACjC,OAAO,GAAG;;EAEd;;AAtEW3J,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAA4G,SAAd5G,cAAc;EAAA6G,YAFb;AAAM;;;;;;;;;;;;;;;;ACDd,MAAOtG,kBAAkB;EAE/BzB,eAAgB;EAEhB8K,OAAO,CAACrB,IAAU;IAChB,IAAIsB,KAAK,GAAG,EAAE;IACd,IAAGlI,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAC;MAC/BiI,KAAK,GAAGpB,IAAI,CAACC,KAAK,CAAC/G,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;MACzDiI,KAAK,GAAG,CAAC,GAAGA,KAAK,EAAEtB,IAAI,CAAC;KACzB,MAAI;MACHsB,KAAK,GAAG,CAACtB,IAAI,CAAC;;IAEhB5G,YAAY,CAACgI,OAAO,CAAC,OAAO,EAAElB,IAAI,CAACc,SAAS,CAACM,KAAK,CAAC,CAAC;EACtD;;AAbatJ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAqG,SAAlBrG,kBAAkB;EAAAsG,YAFjB;AAAM;;;;;;;;;;;;;;;;;;;;;;;;ACOd,MAAOxG,kBAAkB;EAE7BvB,YACUgL,WAAwB,EACxBvI,QAAyB,EACzBW,MAAc;IAFd,gBAAW,GAAX4H,WAAW;IACX,aAAQ,GAARvI,QAAQ;IACR,WAAM,GAANW,MAAM;EAAY;EAE5BV,QAAQ,IACR;EAEAuI,OAAO,CAACC,SAAiB;IACvB7G,OAAO,CAACC,GAAG,CAAC4G,SAAS,CAAC;IACtB,MAAMC,KAAK,GAAG,IAAI,CAACH,WAAW,CAACxB,QAAQ,CAAC0B,SAAS,CAACnM,KAAK,CAAC;IACxD,IAAGoM,KAAK,EAAC;MACPtI,YAAY,CAACgI,OAAO,CAAC,OAAO,EAAEM,KAAK,CAACpB,QAAQ,CAAC;MAC7C,IAAI,CAACtH,QAAQ,CAACQ,OAAO,CAAC,eAAe,CAAC;MACtC,IAAI,CAACG,MAAM,CAACwC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;KAC5B,MAAI;MACH,IAAI,CAACnD,QAAQ,CAAC0D,KAAK,CAAC,gBAAgB,CAAC;;EAEzC;;AApBW5E,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAtB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCX/BC,4DAAAA,aAAiB;MAIPA,oDAAAA,YAAK;MAAAA,0DAAAA,EAAK;MAEhBA,4DAAAA,aAAuB;MACKA,wDAAAA;QAAAA,2DAAAA;QAAA;QAAA,OAAYA,yDAAAA,iBAAkB;MAAA,EAAC;MACvDA,4DAAAA,aAA+B;MACpBA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAQ;MACnBA,uDAAAA,gBAA6D;MACjEA,0DAAAA,EAAM;MAENA,4DAAAA,cAA+B;MACtBA,oDAAAA,gBAAQ;MAAAA,0DAAAA,EAAQ;MACvBA,uDAAAA,gBAA6E;MAC/EA,0DAAAA,EAAM;MAENA,4DAAAA,cAA+B;MAC+CA,oDAAAA,aAAK;MAAAA,0DAAAA,EAAS;MAC1FA,4DAAAA,kBAAoD;MAAAA,oDAAAA,cAAM;MAAAA,0DAAAA,EAAS;;;;MAD3DA,uDAAAA,IAA6B;MAA7BA,wDAAAA,wBAA6B;;;;;;;;;;;;;;;;;;;;;;;;AClBkF;;;;;;;;ICUrHA,4DAAAA,eAAuF;IACrFA,oDAAAA,4BACF;IAAAA,0DAAAA,EAAO;;;;;IAOPA,4DAAAA,WAAyC;IACvCA,oDAAAA,gCACF;IAAAA,0DAAAA,EAAO;;;;;IACPA,4DAAAA,WAAsC;IACpCA,oDAAAA,gCACF;IAAAA,0DAAAA,EAAO;;;;;IANTA,4DAAAA,eAAiF;IAC/EA,wDAAAA,oEAEO;IACPA,wDAAAA,oEAEO;IACTA,0DAAAA,EAAO;;;;IANEA,uDAAAA,GAAgC;IAAhCA,wDAAAA,2CAAgC;IAGhCA,uDAAAA,GAA6B;IAA7BA,wDAAAA,wCAA6B;;;;;IAUpCA,4DAAAA,WAA4C;IAC1CA,oDAAAA,gCACF;IAAAA,0DAAAA,EAAO;;;;;IACPA,4DAAAA,WAA6C;IAC3CA,oDAAAA,gDACF;IAAAA,0DAAAA,EAAO;;;;;IANTA,4DAAAA,eAAuF;IACrFA,wDAAAA,oEAEO;IACPA,wDAAAA,oEAEO;IACTA,0DAAAA,EAAO;;;;IANEA,uDAAAA,GAAmC;IAAnCA,wDAAAA,oFAAmC;IAGnCA,uDAAAA,GAAoC;IAApCA,wDAAAA,qFAAoC;;;;;IAU3CA,4DAAAA,WAAqD;IACnDA,oDAAAA,gCACF;IAAAA,0DAAAA,EAAO;;;;;IACPA,4DAAAA,WAAgF;IAC9EA,oDAAAA,6BACF;IAAAA,0DAAAA,EAAO;;;;;IANTA,4DAAAA,eAAqG;IACnGA,wDAAAA,oEAEO;IACPA,wDAAAA,oEAEO;IACTA,0DAAAA,EAAO;;;;IANEA,uDAAAA,GAA4C;IAA5CA,wDAAAA,sGAA4C;IAG5CA,uDAAAA,GAAuE;IAAvEA,wDAAAA,0IAAuE;;;ADtCpF,MAAOkB,qBAAqB;EAEhCxB,YACUmD,EAAe,EACfiI,WAA+B,EAC/B3I,QAAyB;IAFzB,OAAE,GAAFU,EAAE;IACF,gBAAW,GAAXiI,WAAW;IACX,aAAQ,GAAR3I,QAAQ;IAIlB,kBAAa,GAAY,KAAK;EAJS;EAOvCC,QAAQ;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC2I,sBAAsB,EAAE;EAC/B;EAEAA,sBAAsB;IACpB,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACnI,EAAE,CAACqB,KAAK,CAAC;MACpCuF,QAAQ,EAAE,CAAC,IAAI,EAAE7G,+DAAmB,CAAC;MACrCqI,KAAK,EAAE,CAAC,IAAI,EAAE,CAACrI,+DAAmB,EAAEA,4DAAgB,CAAC,CAAC;MACtD8G,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC9G,+DAAmB,EAAEA,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;MAChEuI,eAAe,EAAE,CAAC,IAAI,EAAE,CAACvI,+DAAmB,CAAC,CAAC;MAC9CwI,MAAM,EAAE,CAAC,IAAI,EAAE,CAACxI,+DAAmB,EAAEA,gEAAoB,CAAC,EAAE,CAAC,CAAC;KAC/D,EAAC;MAACA,UAAU,EAAE,IAAI,CAAC0I;IAAyB,CAAC,CAAC;EACjD;EAEAA,yBAAyB,CAACC,EAAmB;IAC3C,OAAOA,EAAE,CAACxB,GAAG,CAAC,UAAU,CAAC,EAAEtL,KAAK,KAAK8M,EAAE,CAACxB,GAAG,CAAC,iBAAiB,CAAC,EAAEtL,KAAK,GAAG,IAAI,GAC1E;MAAE+M,UAAU,EAAE;IAAI,CAAE;EACxB;EAEAjG,QAAQ;IACNxB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACgH,gBAAgB,CAAC;IAClC,IAAI,CAACS,aAAa,GAAG,IAAI;IACzB,IAAG,IAAI,CAACT,gBAAgB,CAACU,KAAK,EAAC;MAC7B;MACA,IAAI,CAACZ,WAAW,CAACN,OAAO,CAAC,IAAI,CAACmB,QAAQ,EAAE,CAAC;MACzC,IAAI,CAACX,gBAAgB,CAACY,KAAK,EAAE;MAC7B,IAAI,CAACH,aAAa,GAAG,KAAK;MAE1B,IAAI,CAACtJ,QAAQ,CAACQ,OAAO,CAAC,2CAA2C,CAAC;KACnE,MAAI;MACH,IAAI,CAACR,QAAQ,CAAC0D,KAAK,CAAC,oCAAoC,CAAC;;EAE7D;EAEA8F,QAAQ;IACN,OAAO,IAAI,CAACxC,IAAI,GAAG;MACjBM,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAAChL,KAAK;MAC7BwM,KAAK,EAAE,IAAI,CAACA,KAAK,CAACxM,KAAK;MACvBiL,QAAQ,EAAE,IAAI,CAACA,QAAQ,CAACjL,KAAK;MAC7B2M,MAAM,EAAE,IAAI,CAACA,MAAM,CAAC3M;KACrB;EACH;EAEA,IAAIgL,QAAQ;IACV,OAAO,IAAI,CAACuB,gBAAgB,CAACjB,GAAG,CAAC,UAAU,CAAgB;EAC7D;EACA,IAAIkB,KAAK;IACP,OAAO,IAAI,CAACD,gBAAgB,CAACjB,GAAG,CAAC,OAAO,CAAgB;EAC1D;EACA,IAAIL,QAAQ;IACV,OAAO,IAAI,CAACsB,gBAAgB,CAACjB,GAAG,CAAC,UAAU,CAAgB;EAC7D;EACA,IAAIoB,eAAe;IACjB,OAAO,IAAI,CAACH,gBAAgB,CAACjB,GAAG,CAAC,iBAAiB,CAAgB;EACpE;EACA,IAAIqB,MAAM;IACR,OAAO,IAAI,CAACJ,gBAAgB,CAACjB,GAAG,CAAC,QAAQ,CAAgB;EAC3D;;AA7EW7I,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAAvB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCXlCC,4DAAAA,aAAiB;MAIPA,oDAAAA,eAAQ;MAAAA,0DAAAA,EAAK;MAEnBA,4DAAAA,aAAuB;MACgBA,wDAAAA;QAAA,OAAY4G,cAAU;MAAA,EAAC;MAC1D5G,4DAAAA,aAA+B;MACUA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAQ;MACjDA,uDAAAA,gBAAmE;MACnEA,wDAAAA,6DAEO;MACXA,0DAAAA,EAAM;MAENA,4DAAAA,cAA+B;MACSA,oDAAAA,aAAK;MAAAA,0DAAAA,EAAQ;MACnDA,uDAAAA,iBAAgE;MAChEA,wDAAAA,6DAOO;MACTA,0DAAAA,EAAM;MAENA,4DAAAA,cAA+B;MACYA,oDAAAA,gBAAQ;MAAAA,0DAAAA,EAAQ;MACzDA,uDAAAA,iBAAuE;MACvEA,wDAAAA,6DAOO;MACTA,0DAAAA,EAAM;MAENA,4DAAAA,cAA+B;MACaA,oDAAAA,wBAAgB;MAAAA,0DAAAA,EAAQ;MAClEA,uDAAAA,iBAA8E;MAC9EA,wDAAAA,6DAOO;MACTA,0DAAAA,EAAM;MAENA,4DAAAA,cAA+B;MACUA,oDAAAA,cAAM;MAAAA,0DAAAA,EAAQ;MACrDA,uDAAAA,iBAAiE;MACnEA,0DAAAA,EAAM;MAENA,4DAAAA,cAA+B;MACiBA,oDAAAA,YAAI;MAAAA,0DAAAA,EAAS;MAC3DA,4DAAAA,kBAAmD;MAAAA,oDAAAA,cAAM;MAAAA,0DAAAA,EAAS;MAEpEA,oDAAAA,IAA8C;;MAAAA,uDAAAA,UAAI;MAClDA,oDAAAA,IACF;MAAAA,0DAAAA,EAAO;;;MA3DDA,uDAAAA,GAA8B;MAA9BA,wDAAAA,mCAA8B;MAIHA,uDAAAA,GAA0D;MAA1DA,wDAAAA,0EAA0D;MAQ5DA,uDAAAA,GAAoD;MAApDA,wDAAAA,oEAAoD;MAapDA,uDAAAA,GAA0D;MAA1DA,wDAAAA,0EAA0D;MAa1DA,uDAAAA,GAAwE;MAAxEA,wDAAAA,wFAAwE;MAmBrGA,uDAAAA,IAA8C;MAA9CA,gEAAAA,mBAAAA,yDAAAA,wCAA8C;MAC9CA,uDAAAA,GACF;MADEA,gEAAAA,oDACF;;;;;;;;;;;;;;;;;;;AClEC,MAAM4J,WAAW,GAAG;EACzBiC,UAAU,EAAE,KAAK;EACjB/B,OAAO,EAAE;CACV;;;;;;;;;;;;;;ACD4C;AAG7CgC,sEAAAA,EAAwB,CAACC,eAAe,CAAClK,sDAAS,CAAC,CAChDmK,KAAK,CAACC,GAAG,IAAIlI,OAAO,CAAC8B,KAAK,CAACoG,GAAG,CAAC,CAAC","sources":["./src/app/Pipes/filter.pipe.ts","./src/app/Pipes/sort.pipe.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/model/property.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/property/add-property/add-property.component.ts","./src/app/property/add-property/add-property.component.html","./src/app/property/property-card/property-card.component.html","./src/app/property/property-card/property-card.component.ts","./src/app/property/property-detail/property-detail-resolver.service.ts","./src/app/property/property-detail/property-detail.component.ts","./src/app/property/property-detail/property-detail.component.html","./src/app/property/property-list/property-list.component.html","./src/app/property/property-list/property-list.component.ts","./src/app/services/alertify.service.ts","./src/app/services/auth.service.ts","./src/app/services/housing.service.ts","./src/app/services/user-service.service.ts","./src/app/user/user-login/user-login.component.ts","./src/app/user/user-login/user-login.component.html","./src/app/user/user-register/user-register.component.ts","./src/app/user/user-register/user-register.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any[], filterString: string = '', propName: string = ''): any[] {\n    const resultArray = [];\n    if(value.length === 0 || filterString === '' || propName === ''){\n      return value;\n    }\n\n    for(const item of value){\n      if(item[propName] === filterString){\n        resultArray.push(item);\n      }\n    }\n    return resultArray;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'sort'\n})\nexport class SortPipe implements PipeTransform {\n\n  transform(value: Array<string>, args: any[]): any {\n    const sortField = args[0];\n    const sortDirection = args[1];\n    let multiplier = 1;\n    if (sortDirection === 'desc'){\n      multiplier = -1;\n    }\n    value.sort((a: any, b: any) => {\n      if(a[sortField] < b[sortField]){\n        return -1 * multiplier;\n      }else if (a[sortField] > b[sortField]){\n        return 1 * multiplier;\n      }else{\n        return 0;\n      }\n    });\n\n    return value;\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-first-app';\n}\n","<app-nav-bar></app-nav-bar>\n<div class=\"container\" style=\"margin-top: 70px;\">\n  <!-- <app-property-list></app-property-list> -->\n  <router-outlet></router-outlet>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule} from '@angular/common/http';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { ButtonsModule } from 'ngx-bootstrap/buttons';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\nimport { AppComponent } from './app.component';\nimport { PropertyCardComponent } from './property/property-card/property-card.component';\nimport { PropertyListComponent } from './property/property-list/property-list.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { HousingService } from './services/housing.service';\nimport { AddPropertyComponent } from './property/add-property/add-property.component';\nimport { PropertyDetailComponent } from './property/property-detail/property-detail.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserLoginComponent } from './user/user-login/user-login.component';\nimport { UserRegisterComponent } from './user/user-register/user-register.component';\nimport { UserServiceService } from './services/user-service.service';\nimport { AlertifyService } from './services/alertify.service';\nimport { AuthService } from './services/auth.service';\nimport { PropertyDetailResolverService } from './property/property-detail/property-detail-resolver.service';\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\nimport { FilterPipe } from './Pipes/filter.pipe';\nimport { SortPipe } from './Pipes/sort.pipe';\n\nconst appRoutes: Routes = [\n  {path:'', component: PropertyListComponent},\n  {path:'rent-property', component: PropertyListComponent},\n  {path:'add-property', component: AddPropertyComponent},\n  {path:'property-detail/:id',\n    component: PropertyDetailComponent,\n    resolve: {prp: PropertyDetailResolverService}},\n  {path:'user/login', component: UserLoginComponent},\n  {path:'user/register', component: UserRegisterComponent},\n  {path:'**', component: PropertyListComponent},\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PropertyCardComponent,\n    PropertyListComponent,\n    NavBarComponent,\n    AddPropertyComponent,\n    PropertyDetailComponent,\n    UserLoginComponent,\n    UserRegisterComponent,\n    FilterPipe,\n    SortPipe\n   ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    BsDropdownModule.forRoot(),\n    RouterModule.forRoot(appRoutes),\n    TabsModule,\n    ButtonsModule,\n    BsDatepickerModule,\n    NgxGalleryModule,\n  ],\n  providers: [\n    HousingService,\n    UserServiceService,\n    AlertifyService,\n    AuthService,\n    PropertyDetailResolverService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { IPropertyBase } from \"./ipropertybase\";\r\n\r\nexport class Property implements IPropertyBase{\r\n  Id!: number;\r\n  SellRent!: number;\r\n  Name!: string;\r\n  PType!: string;\r\n  BHK!: number;\r\n  FType!: string;\r\n  Price!: number;\r\n  BuiltArea!: number;\r\n  CarpetArea?: number;\r\n  Address!: string;\r\n  Address2?: string;\r\n  City!: string | null;\r\n  FloorNo?: string;\r\n  TotalFloor?: string;\r\n  RTM!: number;\r\n  AOP?: string;\r\n  MainEntrance?: string;\r\n  Security?: number;\r\n  Gated?: number;\r\n  Maintenance?: number;\r\n  Possession?: string;\r\n  Image?: string;\r\n  Description?: string;\r\n  PostedOn!: string;\r\n  PostedBy!: number;\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand ms-lg-4\" href=\"#\">HSPA</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse me-lg-3\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLinkActiveOptions]=\"{exact:true}\" routerLinkActive=\"active\" aria-current=\"page\" routerLink=\"/\">Buy</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/rent-property\">Rent</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLinkActive=\"active\" routerLink=\"/add-property\">List Property (Free)</a>\n        </li>\n      </ul>\n\n      <div class=\"me-lg-2\">\n        <ul class=\"nav navbar-nav\">\n          <li *ngIf=\"loggedin() == '{}'\" class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"user/register\" routerLinkActive=\"active\">Register</a>\n          </li>\n          <li *ngIf=\"loggedin() == '{}'\" class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"user/login\" routerLinkActive=\"active\">Login</a>\n          </li>\n          <div *ngIf=\"loggedin() != '{}'\" class=\"dropdown mr-5\" dropdown>\n            <a href=\"#\" class=\"dropdown-toggle text-light\" dropdownToggle (click)=\"false\">\n              Welcome {{loggedinUser}}\n            </a>\n            <div class=\"dropdown-menu\" *dropdownMenu>\n              <a href=\"#\" class=\"dropdown-item\">\n                <i class=\"fas fa-tachometer-alt\"></i> View Dashboard </a>\n              <a href=\"#\" class=\"dropdown-item\">\n                <i class=\"far fa-user-circle\"></i> My Profile </a>\n              <a href=\"#\" class=\"dropdown-item\">\n                <i class=\"fas fa-key\"></i> Change Password </a>\n              <a (click)='onLogout()' class=\"dropdown-item\">\n                <i class=\"fas fa-sign-out-alt\"></i> Logout </a>\n            </div>\n          </div>\n        </ul>\n      </div>\n    </div>\n  </div>\n</nav>\n","import { Component, OnInit } from '@angular/core';\nimport { AlertifyService } from '../services/alertify.service';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  loggedinUser!: string;\n  constructor(private alertify: AlertifyService) { }\n\n  ngOnInit() {\n  }\n\n  loggedin(){\n    this.loggedinUser =  localStorage.getItem('token') || '{}';\n    return this.loggedinUser;\n  }\n\n  onLogout(){\n    localStorage.removeItem('token');\n    this.alertify.success('You are logout');\n  }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TabsetComponent } from 'ngx-bootstrap/tabs';\nimport { IPropertyBase } from 'src/app/model/ipropertybase';\nimport { Property } from 'src/app/model/property';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { HousingService } from 'src/app/services/housing.service';\n\n@Component({\n  selector: 'app-add-property',\n  templateUrl: './add-property.component.html',\n  styleUrls: ['./add-property.component.css']\n})\nexport class AddPropertyComponent implements OnInit {\n  // @ViewChild('Form') addPropertyForm!: NgForm;\n  @ViewChild('formTabs') formTabs?: TabsetComponent;\n\n  addPropertyForm!: FormGroup;\n  nextClicked!: boolean;\n\n  propertyType: Array<string> = ['House','Apartment','Duplex'];\n  furnishType: Array<string> = ['Fully','Semi','Unfurnished'];\n  entranceTypes: Array<string> = ['East','West','South','North'];\n  cityList!: any[];\n\n  propertyView: IPropertyBase = {\n    Id: null,\n    SellRent: null,\n    Name: null,\n    PType: null,\n    Price: null,\n    FType: null,\n    BHK: null,\n    BuiltArea: null,\n    City: '',\n    RTM: null\n  };\n  property = new Property();\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private housingService: HousingService,\n    private alertify: AlertifyService) { }\n\n  ngOnInit() {\n    this.CreateAddPropertyForm();\n    this.housingService.getAllCities().subscribe(data => {\n      this.cityList = data;\n      console.log(data);\n    })\n  }\n\n  CreateAddPropertyForm(){\n    this.addPropertyForm = this.fb.group({\n      BasicInfo: this.fb.group({\n        SellRent: ['1' , Validators.required],\n        BHK: [null, Validators.required],\n        PType: [null, Validators.required],\n        FType: [null, Validators.required],\n        Name: [null, Validators.required],\n        City: [null, Validators.required]\n      }),\n      PriceInfo: this.fb.group({\n        Price: [null, Validators.required],\n        BuiltArea: [null, Validators.required],\n        CarpetArea: [null],\n        Security: [null],\n        Maintenance: [null],\n      }),\n      AddressInfo: this.fb.group({\n        FloorNo: [null],\n        TotalFloor: [null],\n        Address: [null, Validators.required],\n        LandMark: [null],\n      }),\n      OtherInfo: this.fb.group({\n        RTM: [null, Validators.required],\n        PossessionOn: [null],\n        AOP: [null],\n        Gated: [null],\n        MainEntrance: [null],\n        Description: [null]\n      })\n    })\n  }\n\n//#region <Getter method>\n  //#region <FormGroup>\n  get BasicInfo(){\n    return this.addPropertyForm.controls['BasicInfo'] as FormGroup;\n  }\n\n  get PriceInfo(){\n    return this.addPropertyForm.controls['PriceInfo'] as FormGroup;\n  }\n\n  get AddressInfo() {\n    return this.addPropertyForm.controls['AddressInfo'] as FormGroup;\n  }\n\n  get OtherInfo() {\n    return this.addPropertyForm.controls['OtherInfo'] as FormGroup;\n  }\n\n  get SellRent(){\n    return this.BasicInfo.controls['SellRent'] as FormControl;\n  }\n\n  get BHK() {\n    return this.BasicInfo.controls['BHK'] as FormControl;\n  }\n\n  get PType() {\n    return this.BasicInfo.controls['PType'] as FormControl;\n  }\n\n  get FType() {\n    return this.BasicInfo.controls['FType'] as FormControl;\n  }\n\n  get Name() {\n    return this.BasicInfo.controls['Name'] as FormControl;\n  }\n\n  get City() {\n    return this.BasicInfo.controls['City'] as FormControl;\n  }\n\n  get Price(){\n    return this.PriceInfo.controls['Price'] as FormControl;\n  }\n\n  get BuiltArea() {\n    return this.PriceInfo.controls['BuiltArea'] as FormControl;\n  }\n\n  get CarpetArea() {\n    return this.PriceInfo.controls['CarpetArea'] as FormControl;\n  }\n\n  get Security() {\n    return this.PriceInfo.controls['Security'] as FormControl;\n  }\n\n  get Maintenance() {\n    return this.PriceInfo.controls['Maintenance'] as FormControl;\n  }\n\n  get FloorNo() {\n    return this.AddressInfo.controls['FloorNo'] as FormControl;\n  }\n\n  get TotalFloor() {\n    return this.AddressInfo.controls['TotalFloor'] as FormControl;\n  }\n\n  get Address() {\n    return this.AddressInfo.controls['Address'] as FormControl;\n  }\n\n  get LandMark() {\n    return this.AddressInfo.controls['LandMark'] as FormControl;\n  }\n\n  get RTM() {\n    return this.OtherInfo.controls['RTM'] as FormControl;\n  }\n\n  get PossessionOn() {\n    return this.OtherInfo.controls['PossessionOn'] as FormControl;\n  }\n\n  get AOP() {\n    return this.OtherInfo.controls['AOP'] as FormControl;\n  }\n\n  get Gated() {\n    return this.OtherInfo.controls['Gated'] as FormControl;\n  }\n\n  get MainEntrance() {\n    return this.OtherInfo.controls['MainEntrance'] as FormControl;\n  }\n\n  get Description() {\n    return this.OtherInfo.controls['Description'] as FormControl;\n  }\n\n  onBack(){\n    this.router.navigate(['/']);\n  }\n\n  onSubmit(){\n    this.nextClicked = true;\n    if(this.allTabsValid()){\n      this.mapProperty();\n      this.housingService.addProperty(this.property);\n      this.alertify.success(\"Successfully listed a property\");\n      console.log(this.addPropertyForm);\n\n      if(this.SellRent.value === '2'){\n        this.router.navigate(['/rent-property']);\n      }else{\n        this.router.navigate(['/']);\n      }\n    }else{\n      this.alertify.error(\"Please review the form\");\n    }\n  }\n\n  mapProperty(): void {\n    this.property.Id = this.housingService.newPropId();\n    this.property.SellRent = +this.SellRent.value;\n    this.property.BHK = this.BHK.value;\n    this.property.PType = this.PType.value;\n    this.property.Name = this.Name.value;\n    this.property.City = this.City.value;\n    this.property.FType = this.FType.value;\n    this.property.Price = this.Price.value;\n    this.property.Security = this.Security.value;\n    this.property.Maintenance = this.Maintenance.value;\n    this.property.BuiltArea = this.BuiltArea.value;\n    this.property.CarpetArea = this.CarpetArea.value;\n    this.property.FloorNo = this.FloorNo.value;\n    this.property.TotalFloor = this.TotalFloor.value;\n    this.property.Address = this.Address.value;\n    this.property.Address2 = this.LandMark.value;\n    this.property.RTM = this.RTM.value;\n    this.property.AOP = this.AOP.value;\n    this.property.Gated = this.Gated.value;\n    this.property.MainEntrance = this.MainEntrance.value;\n    this.property.Possession = this.PossessionOn.value;\n    this.property.Description = this.Description.value;\n    this.property.PostedOn = new Date().toString();\n  }\n\n  allTabsValid(): boolean {\n    if(this.BasicInfo.invalid){\n      if (this.formTabs)\n      this.formTabs.tabs[0].active = true;\n      return false;\n    }\n\n    if(this.PriceInfo.invalid){\n      if (this.formTabs)\n      this.formTabs.tabs[1].active = true;\n      return false;\n    }\n\n    if(this.AddressInfo.invalid){\n      if (this.formTabs)\n      this.formTabs.tabs[2].active = true;\n      return false;\n    }\n\n    if(this.OtherInfo.invalid){\n      if (this.formTabs)\n      this.formTabs.tabs[3].active = true;\n      return false;\n    }\n\n    return true;\n\n  }\n\n  selectTab(tabId: number, IsCurrentTabValid: boolean) {\n    this.nextClicked = true;\n    if (this.formTabs?.tabs[tabId] && IsCurrentTabValid) {\n      this.formTabs.tabs[tabId].active = true;\n    }\n  }\n\n}\n","<div class=\"row mb-5\">\n  <div class=\"col-8 shadow-lg p-0 bg-white\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h3>List your Property</h3>\n      </div>\n      <div class=\"card-body\">\n    <form (ngSubmit)='onSubmit()' [formGroup]=\"addPropertyForm\">\n      <div class=\"tab-panel\">\n        <tabset class=\"member-tabset\" #formTabs>\n\n          <tab heading=\"Basic Info\" formGroupName=\"BasicInfo\">\n              <div class=\"form-group col-12 mt-3\">\n                <p>I want to</p>\n                <div class=\"btn-group\" btnRadioGroup ngModel formControlName=\"SellRent\" required>\n                  <label class=\"btn btn-outline-primary me-1\"\n                  btnRadio=1 tabindex=\"0\" role=\"button\" name=\"SellRent\">Sell</label>\n\n                  <label class=\"btn btn-outline-primary\"\n                  btnRadio=2 tabindex=\"0\" role=\"button\" name=\"SellRent\">Rent</label>\n                </div>\n                <div class=\"error-block\" *ngIf=\"SellRent.invalid && nextClicked\">\n                  Please select sell or rent\n                </div>\n              </div>\n\n              <div class=\"form-group col-12 mt-3\">\n                <p>BHK</p>\n                <div class=\"btn-group\" btnRadioGroup\n                formControlName=\"BHK\"\n                [(ngModel)]=\"propertyView.BHK\" name=\"BHK\">\n                  <label\n                  *ngFor=\"let bhk of [1,2,3,4]\"\n                  class=\"btn btn-outline-primary me-1\"\n                  [btnRadio]=\"bhk\" tabindex=\"0\" role=\"button\" name=\"BHK\">{{bhk}}</label>\n                </div>\n                <div class=\"error-block\" *ngIf=\"BHK.invalid && nextClicked\">\n                  Please select BHK\n                </div>\n              </div>\n\n              <div class=\"form-group col-12 mt-3\">\n                <p>Property Type</p>\n                <div class=\"btn-group\" btnRadioGroup formControlName=\"PType\"\n                [(ngModel)]=\"propertyView.PType\">\n                  <label\n                  *ngFor=\"let ptype of propertyType\"\n                  class=\"btn btn-outline-primary me-1\"\n                  [btnRadio]=\"ptype\" tabindex=\"0\" role=\"button\" name=\"SellRent\">{{ptype}}</label>\n                </div>\n                <div class=\"error-block\" *ngIf=\"PType.invalid && nextClicked\">\n                  Please select property type\n                </div>\n              </div>\n\n              <div class=\"form-group col-12 mt-3\">\n                <p>Furnishing Type</p>\n                <div class=\"btn-group\" btnRadioGroup\n                formControlName=\"FType\"\n                [(ngModel)]=\"propertyView.FType\">\n                  <label\n                  *ngFor=\"let ftype of furnishType\"\n                  class=\"btn btn-outline-primary me-1\"\n                  [btnRadio]=\"ftype\" tabindex=\"0\" role=\"button\" name=\"FurnishType\">{{ftype}}</label>\n                </div>\n                <div class=\"error-block\" *ngIf=\"FType.invalid && nextClicked\">\n                  Please select furnishing type\n                </div>\n              </div>\n\n              <div class=\"form-group col-12 mt-3\">\n                <label>in Building/Society/Project</label>\n                <input type=\"text\" class=\"form-control\" ngModel\n                formControlName=\"Name\"\n                [(ngModel)]=\"propertyView.Name\">\n                <div class=\"error-block\"\n                  *ngIf=\"Name.invalid && (nextClicked || Name.touched)\">\n                    Please select building, society or project name\n                </div>\n              </div>\n\n              <div class=\"form-group col-12 mt-3\">\n                <label>City</label>\n                <select class=\"form-control\"\n                formControlName=\"City\"\n                [(ngModel)]=\"propertyView.City\">\n                <option value=\"\">--Select City--</option>\n                <option *ngFor=\"let city of cityList\" value=\"{{city.id}}\">{{city.name}}</option>\n                </select>\n                <div class=\"error-block\"\n                  *ngIf=\"City.invalid && (nextClicked || City.touched)\">\n                    Please select city\n                </div>\n              </div>\n\n              <div class=\"form-group col-12 mt-3\">\n                  <button type=\"button\" class=\"btn btn-primary btn-block me-3 mt-3\"\n                  (click)=\"selectTab(1, BasicInfo.valid)\">Next</button>\n              </div>\n          </tab>\n\n          <tab heading=\"Pricing and Area\" formGroupName=\"PriceInfo\">\n\n              <div class=\"form-group col-12\">\n                <label *ngIf=\"SellRent.value==1\">Price (in USD)</label>\n                <label *ngIf=\"SellRent.value==2\">Rent (in USD)</label>\n                <input type=\"text\" class=\"form-control\"\n                formControlName=\"Price\"\n                [(ngModel)]=\"propertyView.Price\">\n                <div class=\"error-block\"\n                *ngIf=\"Price.invalid && (nextClicked || Price.touched)\">\n                  Please select\n                  <span *ngIf=\"SellRent.value==1;else ShowRent\">price</span>\n                  <ng-template #ShowRent>rent</ng-template>\n                </div>\n              </div>\n\n              <div *ngIf=\"SellRent.value==2\">\n                <div class=\"form-group col-12\">\n                  <label>Security (in USD)</label>\n                  <input type=\"text\"\n                  formControlName=\"Security\"\n                  class=\"form-control\">\n                </div>\n\n                <div class=\"form-group col-12\">\n                  <label>Maintenance (in USD)</label>\n                  <input type=\"text\"\n                  formControlName=\"Maintenance\"\n                  class=\"form-control\">\n                </div>\n              </div>\n\n              <div class=\"form-group col-12\">\n                <label>Built Area (in Sqr Feet)</label>\n                <input type=\"text\"\n                class=\"form-control\"\n                [(ngModel)]=\"propertyView.BuiltArea\"\n                formControlName=\"BuiltArea\">\n                <div class=\"error-block\"\n                *ngIf=\"BuiltArea.invalid && nextClicked\">\n                  Please select built up area\n                </div>\n              </div>\n\n              <div class=\"form-group col-12\">\n                <label>Carpet Area (in Sqr Feet)</label>\n                <input type=\"text\"\n                formControlName=\"CarpetArea\"\n                class=\"form-control\">\n              </div>\n\n              <div class=\"form-group col-12\">\n                <button type=\"button\" class=\"btn btn-primary btn-block me-3 mt-3\"\n                (click)=\"selectTab(2, PriceInfo.valid)\">Next</button>\n\n                <button type=\"button\" class=\"btn btn-primary btn-block me-3 mt-3\"\n                (click)=\"selectTab(0, PriceInfo.valid)\">Back</button>\n              </div>\n          </tab>\n\n          <tab heading=\"Address\" formGroupName=\"AddressInfo\">\n\n              <div class=\"form-group col-12\">\n                <label>Floor</label>\n                <input type=\"text\"\n                formControlName=\"FloorNo\"\n                class=\"form-control\">\n              </div>\n\n              <div class=\"form-group col-12\">\n                <label>Total Floor</label>\n                <input type=\"text\"\n                formControlName=\"TotalFloor\"\n                class=\"form-control\">\n              </div>\n\n              <div class=\"form-group col-12\">\n                <label>Address</label>\n                <input type=\"text\"\n                class=\"form-control\"\n                formControlName=\"Address\">\n                <div class=\"error-block\"\n                *ngIf=\"Address.invalid && (nextClicked || Address.touched)\">\n                  Please select address\n                </div>\n              </div>\n\n              <div class=\"form-group col-12\">\n                <label>Landmark</label>\n                <input type=\"text\"\n                formControlName=\"LandMark\"\n                class=\"form-control\">\n              </div>\n\n              <div class=\"form-group col-12\">\n                <button type=\"button\" class=\"btn btn-primary btn-block me-3 mt-3\"\n                (click)=\"selectTab(3, AddressInfo.valid)\">Next</button>\n\n                <button type=\"button\" class=\"btn btn-primary btn-block me-3 mt-3\"\n                (click)=\"selectTab(1, AddressInfo.valid)\">Back</button>\n              </div>\n          </tab>\n\n          <tab heading=\"Other Details\" formGroupName=\"OtherInfo\">\n              <div class=\"form-group col-12\">\n                <p>Ready to Move</p>\n                <div class=\"btn-group\" btnRadioGroup\n                formControlName=\"RTM\">\n                  <label class=\"btn btn-outline-primary mr-2\"\n                    btnRadio=1 tabindex=\"0\" role=\"button\"\n                    name=\"RTM\">Yes\n                  </label>\n                  <label class=\"btn btn-outline-primary\"\n                    btnRadio=2  tabindex=\"0\" role=\"button\" name=\"RTM\">No\n                  </label>\n                </div>\n                <div class=\"error-block\" *ngIf=\"RTM.invalid && nextClicked\">\n                  Please select ready to move\n                </div>\n              </div>\n\n\n              <div\n              *ngIf=\"RTM.value==2\"\n              class=\"form-group col-6\">\n                <label>Possession/Avaialble From</label>\n                <input type=\"text\"\n                class=\"form-control\"\n                formControlName=\"PossessionOn\"\n                bsDatepicker\n                [bsConfig]=\"{containerClass: 'theme-dark-blue',\n                dateInputFormat: 'DD-MM-YYYY'}\">\n              </div>\n\n              <div\n              *ngIf=\"RTM.value==1\"\n              class=\"form-group col-3\">\n                <label>Age of Property</label>\n                <input type=\"text\"\n                formControlName=\"AOP\"\n                class=\"form-control\">\n              </div>\n\n              <div class=\"form-group col-12\">\n                <p>Gated Community</p>\n                <div class=\"btn-group\"\n                btnRadioGroup\n                formControlName=\"Gated\">\n                  <label class=\"btn btn-outline-primary mr-2\"\n                  btnRadio=1 tabindex=\"0\" role=\"button\" name=\"Gated\">Yes</label>\n                  <label class=\"btn btn-outline-primary\"\n                  btnRadio=2  tabindex=\"0\" role=\"button\" name=\"Gated\">No</label>\n                </div>\n              </div>\n\n              <div class=\"form-group col-12\">\n                <p>Main Entrance</p>\n                <div class=\"btn-group\" btnRadioGroup\n                formControlName=\"MainEntrance\">\n                  <label class=\"btn btn-outline-primary mr-2\"\n                  btnRadio=1 tabindex=\"0\" role=\"button\" name=\"Entrance\">East</label>\n                  <label class=\"btn btn-outline-primary\"\n                  btnRadio=2  tabindex=\"0\" role=\"button\" name=\"Entrance\">West</label>\n                  <label class=\"btn btn-outline-primary\"\n                  btnRadio=3  tabindex=\"0\" role=\"button\" name=\"Entrance\">South</label>\n                  <label class=\"btn btn-outline-primary\"\n                  btnRadio=4  tabindex=\"0\" role=\"button\" name=\"Entrance\">North</label>\n                </div>\n              </div>\n\n              <div class=\"form-group col-12\">\n                <label>Description</label>\n                <textarea type=\"text\"\n                class=\"form-control\"\n                formControlName=\"Description\"\n                rows=\"6\"></textarea>\n              </div>\n\n              <div class=\"form-group col-12\">\n                  <button type=\"button\" class=\"btn btn-primary btn-block me-3 mt-3\"\n                  (click)=\"selectTab(4, OtherInfo.valid)\">Next</button>\n\n                  <button type=\"button\" class=\"btn btn-primary btn-block me-3 mt-3\"\n                  (click)=\"selectTab(2, OtherInfo.valid)\">Back</button>\n              </div>\n          </tab>\n\n          <tab heading=\"Photos\">\n            <div class=\"form-group col-12\">\n              <div class=\"photo-control\">\n                  <button class=\"mt-5\" type=\"button\">Upload</button> <br>\n                  This is under construction\n              </div>\n            </div>\n            <div class=\"form-group col-12\">\n              <button type=\"button\" class=\"btn btn-primary btn-block me-3 mt-3\"\n              (click)=\"selectTab(3, true)\">Back</button>\n\n              <button type=\"reset\" class=\"btn btn-primary btn-block me-3 mt-3\">Cancel</button>\n              <button type=\"submit\" class=\"btn btn-primary btn-block me-3 mt-3\">Save</button>\n            </div>\n          </tab>\n        </tabset>\n      </div>\n    </form>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-4\">\n    <div class=\"card-header\">\n      <h3>Your Property Preview</h3>\n    </div>\n    <div class=\"shadow-lg p-3 bg-white\">\n      <app-property-card [property]=\"propertyView\" [hideIcons]=\"true\"></app-property-card>\n    </div>\n\n  </div>\n</div>\n","<div class=\"card\">\n  <div class=\"card-img-wrapper\">\n    <img *ngIf=\"property.Image\" class=\"card-img-top\" src=\"assets/images/{{property.Image}}.jpg\">\n    <img *ngIf=\"!property.Image\" class=\"card-img-top\" src=\"assets/images/house_default.jpg\">\n    <ul *ngIf=\"!hideIcons\" class=\"list-inline text-center member-icons animate\">\n      <li class=\"list-inline-item\">\n        <button class=\"btn btn-primary\" routerLink=\"/property-detail/{{property.Id}}\"><i class=\"fa-solid fa-pen-to-square\"></i></button>\n      </li>\n      <li class=\"list-inline-item\">\n        <button class=\"btn btn-primary\"><i class=\"fa-solid fa-address-book\"></i></button>\n      </li>\n    </ul>\n  </div>\n  <div class=\"card-body p-1\">\n    <h1 class=\"mb-0\"> {{property.BHK}} BHK {{property.PType}} </h1>\n\n    in {{property.Name}}\n    <span *ngIf=\"property.Name\">,</span>\n    {{property.City}}\n\n    <h6  class=\"mt-2\">{{property.FType}}\n    <span *ngIf=\"property.FType !== 'Unfurnished'\">Furnished</span> | Ready to Move</h6>\n\n    <hr class=\"mt-0 mb-2\">\n\n    <h6 class=\"mb-0\">Price: <span class=\"font-highlight\">{{property.Price}} USD.</span> |\n      Area:  <span class=\"font-highlight\">{{property.BuiltArea}} Sq Ft </span> </h6>\n  </div>\n</div>\n\n\n\n","import { Component, Input } from \"@angular/core\";\nimport { IPropertyBase } from \"src/app/model/ipropertybase\";\n\n@Component({\n  selector: 'app-property-card',\n  // template: `<h1>I am a card</h1>`,\n  templateUrl: 'property-card.component.html',\n  //styles: ['h1 {font-weight: normal}']\n  styleUrls: ['property-card.component.css']\n}\n\n)\nexport class PropertyCardComponent {\n  @Input() property!: IPropertyBase;\n  @Input() hideIcons!: boolean;\n\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, Router, RouterStateSnapshot } from '@angular/router';\nimport { Observable, catchError, of } from 'rxjs';\nimport { Property } from 'src/app/model/property';\nimport { HousingService } from 'src/app/services/housing.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PropertyDetailResolverService implements Resolve<Property>{\n\nconstructor(\n  private housingServive: HousingService,\n  private router: Router ) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n    Observable<Property|any> | Property{\n      const propId = route.params['id'];\n      return this.housingServive.getProperty(+propId).pipe(\n        catchError(error => {\n          this.router.navigate(['/']);\n          return of(null);\n        })\n      );\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgxGalleryImage, NgxGalleryOptions, NgxGalleryAnimation } from '@kolkov/ngx-gallery';\nimport { Property } from 'src/app/model/property';\nimport { HousingService } from 'src/app/services/housing.service';\n\n@Component({\n  selector: 'app-property-detail',\n  templateUrl: './property-detail.component.html',\n  styleUrls: ['./property-detail.component.css']\n})\nexport class PropertyDetailComponent implements OnInit {\n  public propertyId!: number;\n  property = new Property();\n  galleryOptions!: NgxGalleryOptions[];\n  galleryImages!: NgxGalleryImage[];\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private housingService: HousingService) { }\n\n  ngOnInit() {\n    this.propertyId = +this.route.snapshot.params['id'];\n    this.route.data.subscribe(\n      (data: Property | any) => {\n        this.property = data['prp'];\n      }\n    )\n\n    // this.route.params.subscribe(\n    //   (params) => {\n    //     this.propertyId = +params['id'];\n    //     this.housingService.getProperty(this.propertyId).subscribe(\n    //       (data: any) => {\n    //         this.property = data;\n    //       },error => this.router.navigate(['/'])\n    //     )\n    //   }\n    // );\n\n    this.galleryOptions = [\n      {\n        width: '100%',\n        height: '470px',\n        thumbnailsColumns: 4,\n        imageAnimation: NgxGalleryAnimation.Slide,\n        preview: true\n      }\n    ];\n\n    this.galleryImages = [\n      {\n        small: 'assets/images/internal-1.jpg',\n        medium: 'assets/images/internal-1.jpg',\n        big: 'assets/images/internal-1.jpg'\n      },\n      {\n        small: 'assets/images/internal-2.jpg',\n        medium: 'assets/images/internal-2.jpg',\n        big: 'assets/images/internal-2.jpg'\n      },\n      {\n        small: 'assets/images/internal-3.jpg',\n        medium: 'assets/images/internal-3.jpg',\n        big: 'assets/images/internal-3.jpg'\n      },{\n        small: 'assets/images/internal-4.jpg',\n        medium: 'assets/images/internal-4.jpg',\n        big: 'assets/images/internal-4.jpg'\n      },\n      {\n        small: 'assets/images/internal-5.jpg',\n        medium: 'assets/images/internal-5.jpg',\n        big: 'assets/images/internal-5.jpg'\n      },\n      {\n        small: 'assets/images/internal-6.jpg',\n        medium: 'assets/images/internal-6.jpg',\n        big: 'assets/images/internal-6.jpg'\n      }\n    ];\n\n  }\n\n}\n","<div class=\"row shadow\">\n  <div class=\"col-sm-4 p-0\">\n    <div class=\"card\">\n      <div class=\"card-img-wrapper\">\n        <img *ngIf=\"property.Image\" class=\"card-img-top\" src=\"assets/images/{{property.Image}}.jpg\">\n        <img *ngIf=\"!property.Image\" class=\"card-img-top\" src=\"assets/images/house_default.jpg\">\n      </div>\n      <div class=\"card-body\">\n        <h1 class=\"card-title\">{{property.Name}}</h1>\n        <div>\n            <strong>{{property.BHK}} BHK {{property.PType}} @ ${{property.Price}}</strong>\n        </div>\n        <div>\n           <strong>in {{property.City}}</strong>\n        </div> <hr>\n        <div>\n            <strong>Build Area: </strong>\n            {{property.BuiltArea}} Sqft\n        </div>\n\n        <div>\n            <strong>Carpet Area: </strong>\n            {{property.CarpetArea}} Sqft\n        </div>\n        <div>\n            <strong>Furnishing Type: </strong>\n            {{property.FType}}\n        </div>\n      </div>\n      <div class=\"card-footer\">\n        <div class=\"btn-group d-flex\">\n          <button class=\"btn btn-primary\">Like</button>\n          <button class=\"btn btn-success\">Message</button>\n        </div>\n      </div>\n  </div>\n  </div>\n  <div class=\"col-sm-8 p-0\">\n    <div class=\"tab-panel p-3\">\n      <tabset class=\"member-tabset\">\n        <tab heading=\"Overview\">\n          <h1>Overview</h1>\n          <div class=\"row\">\n              <div class=\"col-sm-6\">\n                  <div class=\"heading\">\n                      <strong>Project Name</strong>\n                      <p>{{property.Name}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Floor Number</strong>\n                      <p>{{property.FloorNo}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Age of Property</strong>\n                      <p>{{property.AOP}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Posession</strong>\n                      <p>{{property.Possession}}</p>\n                  </div>\n              </div>\n\n              <div class=\"col-sm-6\">\n                  <div class=\"heading\">\n                      <strong>Main Entrance</strong>\n                      <p>{{property.MainEntrance}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Gated Community</strong>\n                      <p>{{property.Gated}}</p>\n                  </div>\n\n                  <div class=\"heading\">\n                      <strong>Security Deposit</strong>\n                      <p>{{property.Security}}</p>\n                  </div>\n                  <div class=\"heading\">\n                      <strong>Maintenance</strong>\n                      <p>{{property.Maintenance}}</p>\n                  </div>\n              </div>\n              <div class=\"col-sm-12\">\n                  <div class=\"heading\">\n                      <strong>About Property</strong>\n                      <p>{{property.Description}}</p>\n                  </div>\n              </div>\n            </div>\n        </tab>\n        <tab heading=\"Address\">\n          <div class=\"col-sm-12\">\n            <h1>Address</h1>\n            <div class=\"heading\">\n                <strong>{{property.Address}}</strong><br/>\n                <strong>{{property.Address2}}</strong><br/>\n                <strong>{{property.City}}</strong>\n            </div>\n        </div>\n\n        </tab>\n        <tab heading=\"Photos\">\n          <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" class=\"ngx-gallery\"></ngx-gallery>\n        </tab>\n        <tab heading=\"Contact\">\n          <h1>Contact Detail</h1>\n          This should be restricted area and only registered user should be able to see seller contact details\n        </tab>\n      </tabset>\n    </div>\n  </div>\n</div>\n","<label>Filter City: &nbsp;</label>\n<input [(ngModel)]='City'>\n<button type=\"button\" (click)=\"onCityFilter()\">Search</button>\n<button type=\"button\" (click)=\"onCityFilterClear()\">Clear</button>\n\n<label>Sort by &nbsp;</label>\n<select [(ngModel)]='SortbyParam'>\n  <option value=\"City\">City</option>\n  <option value=\"Price\">Price</option>\n</select>\n<button type=\"button\" (click)=\"onSortDirection()\">Sort\n  <i *ngIf=\"SortDirection==='asc'\" class=\"fas fa-sort-alpha-down\"></i>\n  <i *ngIf=\"SortDirection==='desc'\" class=\"fas fa-sort-alpha-up\"></i>\n</button>\n\n<div class=\"row\">\n  <div *ngFor=\"let property of properties | filter:SearchCity:'City' | sort:[SortbyParam,SortDirection]\" class=\"col-sm-4\">\n    <div class=\"shadow-lg p-3 mb-4\">\n        <app-property-card [property]=\"property\"></app-property-card>\n    </div>\n</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HousingService } from 'src/app/services/housing.service';\nimport { IProperty } from 'src/app/model/iproperty';\nimport { ActivatedRoute } from '@angular/router';\nimport { Property } from 'src/app/model/property';\n\n@Component({\n  selector: 'app-property-list',\n  templateUrl: './property-list.component.html',\n  styleUrls: ['./property-list.component.css']\n})\nexport class PropertyListComponent implements OnInit{\n  SellRent = 1;\n  properties: Array<Property> = [];\n  Today = new Date();\n  City = '';\n  SearchCity: any;\n  SortbyParam = '';\n  SortDirection = 'asc';\n  constructor(private route: ActivatedRoute, private housingService: HousingService) {}\n\n  ngOnInit(): void {\n    if (this.route.snapshot.url.toString()){\n      this.SellRent = 2;\n    }\n    this.housingService.getAllProperties(this.SellRent).subscribe(\n      data=>{\n            this.properties = data;\n            console.log(data);\n          }, error => {\n            console.log('httperror');\n            console.log(error);\n          }\n    )\n  }\n\n  onCityFilter(){\n    this.SearchCity = this.City;\n  }\n\n  onCityFilterClear(){\n    this.SearchCity = '';\n    this.City = '';\n  }\n\n  onSortDirection(){\n    if(this.SortDirection === 'desc'){\n      this.SortDirection = 'asc';\n    }else{\n      this.SortDirection = 'desc';\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as alertify from 'alertifyjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n\nsuccess(message: string){\n  alertify.success(message);\n}\n\nwarning(message: string){\n  alertify.warning(message);\n}\n\nerror(message: string){\n  alertify.error(message);\n}\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\nconstructor() { }\n\nauthUser(user: any){\n  debugger\n  let UserArray = [];\n  if(localStorage.getItem('Users')){\n    UserArray = JSON.parse(localStorage.getItem('Users') || '{}');\n  }\n  return UserArray.find((p: { userName: any; password: any; }) => p.userName === user.userName && p.password === user.password);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, map } from 'rxjs';\nimport { Property } from '../model/property';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HousingService {\n\n  baseUrl = environment.baseUrl;\n  constructor(private http:HttpClient) { }\n\n  getAllCities(): Observable<string[]>{\n    return this.http.get<string[]>(this.baseUrl + '/city/cities');\n  }\n\n  getProperty(id: number){\n    return this.getAllProperties().pipe(\n      map(propertiesArray => {\n        //throw new Error('Some error');\n        return propertiesArray.find(p => p.Id === id);\n      })\n    );\n  }\n\n  getAllProperties(SellRent?: number): Observable<Property[]>{\n    return this.http.get('data/properties.json').pipe(\n      map(data => {\n        const propertiesArray : Array<Property> =[];\n        const jsonData = JSON.stringify(data)\n        const tmp: Array<Property> = JSON.parse(jsonData);\n        const localProperties = JSON.parse(localStorage.getItem('newProp') || '{}');\n        if(localProperties){\n          for(const id in localProperties){\n            if(SellRent){\n              if(localProperties[id].SellRent == SellRent){\n                propertiesArray.push(localProperties[id]);\n              }\n            }else{\n              propertiesArray.push(localProperties[id]);\n            }\n        }\n        }\n\n\n        for(const id in tmp){\n          if(SellRent){\n            if(tmp[id].SellRent == SellRent){\n              propertiesArray.push(tmp[id]);\n            }\n          }else{\n            propertiesArray.push(tmp[id]);\n          }\n        }\n        return propertiesArray;\n      })\n    )\n  }\n\n  addProperty(property: Property){\n    let newProp = [property]\n\n    //Add new property in array if newProp already exist in local storage\n    if(localStorage.getItem('newProp')){\n      newProp = [property,\n                  ...JSON.parse(localStorage.getItem('newProp') || '{}')]\n    }\n    localStorage.setItem('newProp', JSON.stringify(newProp));\n  }\n\n  newPropId(){\n    if(localStorage.getItem('PID')){\n      return +(localStorage.getItem('PID') ?? 0) + 1;\n    }else{\n      localStorage.setItem('PID','101');\n      return 101;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { User } from '../model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n\nconstructor() { }\n\naddUser(user: User){\n  let users = [];\n  if(localStorage.getItem('Users')){\n    users = JSON.parse(localStorage.getItem('Users') || '{}');\n    users = [...users, user];\n  }else{\n    users = [user];\n  }\n  localStorage.setItem('Users', JSON.stringify(users));\n}\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent implements OnInit {\n\n  constructor(\n    private authService: AuthService,\n    private alertify: AlertifyService,\n    private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onLogin(loginForm: NgForm){\n    console.log(loginForm);\n    const token = this.authService.authUser(loginForm.value);\n    if(token){\n      localStorage.setItem('token', token.userName)\n      this.alertify.success('Login Success');\n      this.router.navigate(['/']);\n    }else{\n      this.alertify.error('User not exist')\n      }\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-6 m-auto\">\n  <div class=\"card m-auto\">\n    <div class=\"card-header\">\n      <h3>Login</h3>\n    </div>\n    <div class=\"card-body\">\n      <form #loginForm=\"ngForm\" (ngSubmit)=\"onLogin(loginForm)\">\n        <div class=\"form-group col-12\">\n            <label>Name</label>\n            <input class=\"form-control\" required ngModel name=\"userName\">\n        </div>\n\n        <div class=\"form-group col-12\">\n          <label>Password</label>\n          <input class=\"form-control\" required type=\"password\" ngModel name=\"password\">\n        </div>\n\n        <div class=\"form-group col-12\">\n          <button [disabled]=\"!loginForm.valid\" type=\"submit\" class=\"btn btn-primary\">Login</button>\n          <button type=\"button\" class=\"btn btn-secondary m-2\">Cancel</button>\n        </div>\n      </form>\n    </div>\n  </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { User } from 'src/app/model/user';\nimport { UserServiceService } from 'src/app/services/user-service.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\n\n@Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})\nexport class UserRegisterComponent implements OnInit {\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserServiceService,\n    private alertify: AlertifyService) { }\n\n  registrationForm!: FormGroup;\n  user!: User;\n  userSubmitted: boolean = false;\n\n\n  ngOnInit() {\n    // this.registrationForm = new FormGroup({\n    //   userName: new FormControl(null, Validators.required ),\n    //   email: new FormControl(null, [Validators.required, Validators.email]),\n    //   password: new FormControl(null, [Validators.required, Validators.minLength(8)]),\n    //   confirmpassword: new FormControl(null, [Validators.required]),\n    //   mobile: new FormControl(null, [Validators.required, Validators.maxLength(10)])\n    // }, this.passwordMatchingValidator);\n    // this.registrationForm.controls['userName'].setValue(\"Ravindu\");\n    this.createRegistrationForm()\n  }\n\n  createRegistrationForm(){\n    this.registrationForm = this.fb.group({\n      userName: [null, Validators.required],\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, [Validators.required, Validators.minLength(8)]],\n      confirmpassword: [null, [Validators.required]],\n      mobile: [null, [Validators.required, Validators.maxLength(10)]],\n    },{Validators: this.passwordMatchingValidator})\n  }\n\n  passwordMatchingValidator(fc: AbstractControl): ValidationErrors | null {\n    return fc.get('password')?.value === fc.get('confirmpassword')?.value ? null :\n      { notmatched: true }\n  };\n\n  onSubmit(){\n    console.log(this.registrationForm);\n    this.userSubmitted = true;\n    if(this.registrationForm.valid){\n      //this.user = Object.assign(this.user, this.registrationForm.value);\n      this.userService.addUser(this.userData());\n      this.registrationForm.reset();\n      this.userSubmitted = false;\n\n      this.alertify.success('Congratz, You are successfully registered');\n    }else{\n      this.alertify.error('Kindly provide the required fields');\n    }\n  }\n\n  userData():User{\n    return this.user = {\n      userName: this.userName.value,\n      email: this.email.value,\n      password: this.password.value,\n      mobile: this.mobile.value,\n    }\n  }\n\n  get userName(){\n    return this.registrationForm.get('userName') as FormControl;\n  }\n  get email(){\n    return this.registrationForm.get('email') as FormControl;\n  }\n  get password(){\n    return this.registrationForm.get('password') as FormControl;\n  }\n  get confirmpassword(){\n    return this.registrationForm.get('confirmpassword') as FormControl;\n  }\n  get mobile(){\n    return this.registrationForm.get('mobile') as FormControl;\n  }\n\n\n}\n","<div class=\"row\">\n  <div class=\"col-6 m-auto\">\n  <div class=\"card m-auto\">\n    <div class=\"card-header\">\n      <h3>Register</h3>\n    </div>\n    <div class=\"card-body\">\n      <form [formGroup]=\"registrationForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group col-12\">\n            <label for=\"name\" class=\"form-label\">Name</label>\n            <input type=\"text\" class=\"form-control\" formControlName=\"userName\">\n            <span class=\"error-block\" *ngIf=\"!userName.valid && userName.touched || userSubmitted\">\n              Please provide name\n            </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <label for=\"email\" class=\"form-label\">Email</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"email\">\n          <span class=\"error-block\" *ngIf=\"!email.valid && email.touched || userSubmitted\">\n            <span *ngIf=\"email.hasError('required')\">\n              Please provide email id\n            </span>\n            <span *ngIf=\"email.hasError('email')\">\n              Please provide email id\n            </span>\n          </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <label for=\"passwrod\" class=\"form-label\">Password</label>\n          <input type=\"password\" class=\"form-control\" formControlName=\"password\">\n          <span class=\"error-block\" *ngIf=\"!password.valid && password.touched || userSubmitted\">\n            <span *ngIf=\"password.errors?.['required']\">\n              Please provide password\n            </span>\n            <span *ngIf=\"password.errors?.['minlength']\">\n              Password should be minimun 8 characters\n            </span>\n          </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <label for=\"cpassword\" class=\"form-label\">Confirm Password</label>\n          <input type=\"password\" class=\"form-control\" formControlName=\"confirmpassword\">\n          <span class=\"error-block\" *ngIf=\"!confirmpassword.valid && confirmpassword.touched || userSubmitted\">\n            <span *ngIf=\"confirmpassword.hasError?.('required')\">\n              Please confirm password\n            </span>\n            <span *ngIf=\"confirmpassword.hasError?.('notmatched') || confirmpassword.valid\">\n              Password not matched\n            </span>\n          </span>\n        </div>\n\n        <div class=\"form-group col-12\">\n          <label for=\"mobile\" class=\"form-label\">Mobile</label>\n          <input type=\"text\" class=\"form-control\" formControlName=\"mobile\">\n        </div>\n\n        <div class=\"form-group col-12\">\n          <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n          <button type=\"reset\" class=\"btn btn-secondary m-2\">Cancel</button>\n        </div>\n        Form value : {{registrationForm.value | json}}<br>\n        Form status : {{registrationForm.valid}}\n      </form>\n    </div>\n  </div>\n  </div>\n</div>\n","export const environment = {\r\n  production: false,\r\n  baseUrl: \"https://localhost:4200/api\"\r\n}\r\n\r\n\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["FilterPipe","transform","value","filterString","propName","resultArray","length","item","push","pure","SortPipe","args","sortField","sortDirection","multiplier","sort","a","b","AppComponent","constructor","selectors","decls","vars","consts","template","i0","BrowserModule","HttpClientModule","RouterModule","BrowserAnimationsModule","BsDropdownModule","TabsModule","ButtonsModule","BsDatepickerModule","PropertyCardComponent","PropertyListComponent","NavBarComponent","HousingService","AddPropertyComponent","PropertyDetailComponent","FormsModule","ReactiveFormsModule","UserLoginComponent","UserRegisterComponent","UserServiceService","AlertifyService","AuthService","PropertyDetailResolverService","NgxGalleryModule","appRoutes","path","component","resolve","prp","AppModule","bootstrap","imports","forRoot","declarations","Property","alertify","ngOnInit","loggedin","loggedinUser","localStorage","getItem","onLogout","removeItem","success","Validators","fb","router","housingService","Id","SellRent","Name","PType","Price","FType","BHK","BuiltArea","City","RTM","CreateAddPropertyForm","getAllCities","subscribe","data","cityList","console","log","addPropertyForm","group","BasicInfo","required","PriceInfo","CarpetArea","Security","Maintenance","AddressInfo","FloorNo","TotalFloor","Address","LandMark","OtherInfo","PossessionOn","AOP","Gated","MainEntrance","Description","controls","onBack","navigate","onSubmit","nextClicked","allTabsValid","mapProperty","addProperty","property","error","newPropId","Address2","Possession","PostedOn","Date","toString","invalid","formTabs","tabs","active","selectTab","tabId","IsCurrentTabValid","viewQuery","ctx","inputs","hideIcons","catchError","of","housingServive","route","state","propId","params","getProperty","pipe","factory","providedIn","NgxGalleryAnimation","propertyId","snapshot","galleryOptions","width","height","thumbnailsColumns","imageAnimation","Slide","preview","galleryImages","small","medium","big","url","getAllProperties","properties","onCityFilter","SearchCity","onCityFilterClear","onSortDirection","SortDirection","message","warning","authUser","user","UserArray","JSON","parse","find","p","userName","password","map","environment","http","baseUrl","get","id","propertiesArray","jsonData","stringify","tmp","localProperties","newProp","setItem","addUser","users","authService","onLogin","loginForm","token","userService","createRegistrationForm","registrationForm","email","minLength","confirmpassword","mobile","maxLength","passwordMatchingValidator","fc","notmatched","userSubmitted","valid","userData","reset","production","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}